{
    "project": {
        "name": "Next graph",
        "description": "Next graph API docs",
        "version": "0.1",
        "url": "index.html"
    },
    "files": {
        "src/topology/core/Component.js": {
            "name": "src/topology/core/Component.js",
            "modules": {},
            "classes": {
                "nx.graphic.Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/core/DragManager.js": {
            "name": "src/topology/core/DragManager.js",
            "modules": {},
            "classes": {
                "nx.graphic.DragManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/processor/Force.js": {
            "name": "src/topology/data/processor/Force.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/processor/NeXtForce.js": {
            "name": "src/topology/data/processor/NeXtForce.js",
            "modules": {},
            "classes": {
                "nx.data.ObservableGraph.ForceProcessor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Convex.js": {
            "name": "src/topology/data/Convex.js",
            "modules": {},
            "classes": {
                "nx.data.Convex": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/DataProcessor.js": {
            "name": "src/topology/data/DataProcessor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Edge.js": {
            "name": "src/topology/data/Edge.js",
            "modules": {},
            "classes": {
                "nx.data.Edge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/EdgeSet.js": {
            "name": "src/topology/data/EdgeSet.js",
            "modules": {},
            "classes": {
                "nx.data.EdgeSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/EdgeSetCollection.js": {
            "name": "src/topology/data/EdgeSetCollection.js",
            "modules": {},
            "classes": {
                "nx.data.EdgeSetCollection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/EdgeSetCollections.js": {
            "name": "src/topology/data/EdgeSetCollections.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/EdgeSets.js": {
            "name": "src/topology/data/EdgeSets.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Edges.js": {
            "name": "src/topology/data/Edges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Line.js": {
            "name": "src/topology/data/Line.js",
            "modules": {
                "nx.math": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/NeXtForce.js": {
            "name": "src/topology/data/NeXtForce.js",
            "modules": {},
            "classes": {
                "nx.data.Force": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/ObservableGraph.js": {
            "name": "src/topology/data/ObservableGraph.js",
            "modules": {
                "nx.data": 1
            },
            "classes": {
                "nx.data.ObservableGraph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Vertex.js": {
            "name": "src/topology/data/Vertex.js",
            "modules": {},
            "classes": {
                "nx.data.Vertex": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/VertexSet.js": {
            "name": "src/topology/data/VertexSet.js",
            "modules": {},
            "classes": {
                "nx.data.VertexSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/VertexSets.js": {
            "name": "src/topology/data/VertexSets.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/data/Vertices.js": {
            "name": "src/topology/data/Vertices.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/geometry/BezierCurve.js": {
            "name": "src/topology/geometry/BezierCurve.js",
            "modules": {},
            "classes": {
                "nx.geometry.BezierCurve": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            }
        },
        "src/topology/geometry/Line.js": {
            "name": "src/topology/geometry/Line.js",
            "modules": {
                "nx.geometry": 1
            },
            "classes": {
                "nx.geometry.Line": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/geometry/Math.js": {
            "name": "src/topology/geometry/Math.js",
            "modules": {},
            "classes": {
                "nx.geometry.Math": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            }
        },
        "src/topology/geometry/Matrix.js": {
            "name": "src/topology/geometry/Matrix.js",
            "modules": {},
            "classes": {
                "nx.geometry.Matrix": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            }
        },
        "src/topology/geometry/MatrixSupport.js": {
            "name": "src/topology/geometry/MatrixSupport.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/geometry/Vector.js": {
            "name": "src/topology/geometry/Vector.js",
            "modules": {},
            "classes": {
                "nx.geometry.Vector": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            }
        },
        "src/topology/svg/Arc.js": {
            "name": "src/topology/svg/Arc.js",
            "modules": {
                "nx.graphic": 1
            },
            "classes": {
                "nx.geometry.nx.graphic.Arc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/BezierCurves.js": {
            "name": "src/topology/svg/BezierCurves.js",
            "modules": {},
            "classes": {
                "nx.graphic.BezierCurves": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Circle.js": {
            "name": "src/topology/svg/Circle.js",
            "modules": {},
            "classes": {
                "nx.graphic.Circle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Group.js": {
            "name": "src/topology/svg/Group.js",
            "modules": {},
            "classes": {
                "nx.graphic.Group": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/ICON.js": {
            "name": "src/topology/svg/ICON.js",
            "modules": {},
            "classes": {
                "nx.graphic.Icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Icons.js": {
            "name": "src/topology/svg/Icons.js",
            "modules": {},
            "classes": {
                "nx.graphic.Icons": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Image.js": {
            "name": "src/topology/svg/Image.js",
            "modules": {},
            "classes": {
                "nx.graphic.Image": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Line.js": {
            "name": "src/topology/svg/Line.js",
            "modules": {},
            "classes": {
                "nx.graphic.Line": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Path.js": {
            "name": "src/topology/svg/Path.js",
            "modules": {},
            "classes": {
                "nx.graphic.Path": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Polygon.js": {
            "name": "src/topology/svg/Polygon.js",
            "modules": {},
            "classes": {
                "nx.graphic.Polygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Rect.js": {
            "name": "src/topology/svg/Rect.js",
            "modules": {},
            "classes": {
                "nx.graphic.Rect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Stage.js": {
            "name": "src/topology/svg/Stage.js",
            "modules": {},
            "classes": {
                "nx.graphic.Stage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Text.js": {
            "name": "src/topology/svg/Text.js",
            "modules": {},
            "classes": {
                "nx.graphic.Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/svg/Triangle.js": {
            "name": "src/topology/svg/Triangle.js",
            "modules": {},
            "classes": {
                "nx.graphic.Triangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/Categories.js": {
            "name": "src/topology/topology/core/Categories.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Categories": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/Config.js": {
            "name": "src/topology/topology/core/Config.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Config": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/Event.js": {
            "name": "src/topology/topology/core/Event.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Event": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/Graph.js": {
            "name": "src/topology/topology/core/Graph.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Graph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/StageMixin.js": {
            "name": "src/topology/topology/core/StageMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.StageMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/core/Topology.js": {
            "name": "src/topology/topology/core/Topology.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/CircleGroup.js": {
            "name": "src/topology/topology/group/CircleGroup.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.CircleGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/GroupItem.js": {
            "name": "src/topology/topology/group/GroupItem.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.GroupItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/GroupsLayer.js": {
            "name": "src/topology/topology/group/GroupsLayer.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.GroupsLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/NodeSetPolygonGroup.js": {
            "name": "src/topology/topology/group/NodeSetPolygonGroup.js",
            "modules": {
                "nx.graphic.Topology.Group": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/PolygonGroup.js": {
            "name": "src/topology/topology/group/PolygonGroup.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.PolygonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/group/RectGroup.js": {
            "name": "src/topology/topology/group/RectGroup.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.RectGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layer/Layer.js": {
            "name": "src/topology/topology/layer/Layer.js",
            "modules": {
                "nx.graphic.Topology": 1
            },
            "classes": {
                "nx.graphic.Topology.Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layer/LayerMixin.js": {
            "name": "src/topology/topology/layer/LayerMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layout/LayoutMixin.js": {
            "name": "src/topology/topology/layout/LayoutMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.LayoutMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layout/NeXtForceLayout.js": {
            "name": "src/topology/topology/layout/NeXtForceLayout.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.NeXtForceLayout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layout/USMapLayout.js": {
            "name": "src/topology/topology/layout/USMapLayout.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.USMapLayout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/layout/WorldMapLayout.js": {
            "name": "src/topology/topology/layout/WorldMapLayout.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.WorldMapLayout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/AbstractLink.js": {
            "name": "src/topology/topology/link/AbstractLink.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.AbstractLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/Link.js": {
            "name": "src/topology/topology/link/Link.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Link": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/LinkMixin.js": {
            "name": "src/topology/topology/link/LinkMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.LinkMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/LinkSet.js": {
            "name": "src/topology/topology/link/LinkSet.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.LinkSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/LinkSetLayer.js": {
            "name": "src/topology/topology/link/LinkSetLayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/link/LinksLayer.js": {
            "name": "src/topology/topology/link/LinksLayer.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.LinksLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/AbstractNode.js": {
            "name": "src/topology/topology/node/AbstractNode.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.AbstractNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/Node.js": {
            "name": "src/topology/topology/node/Node.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/NodeMixin.js": {
            "name": "src/topology/topology/node/NodeMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.NodeMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/NodeSet.js": {
            "name": "src/topology/topology/node/NodeSet.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.NodeSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/NodeSetLayer.js": {
            "name": "src/topology/topology/node/NodeSetLayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/node/NodesLayer.js": {
            "name": "src/topology/topology/node/NodesLayer.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.NodesLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/path/Path.js": {
            "name": "src/topology/topology/path/Path.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Path": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/path/PathLayer.js": {
            "name": "src/topology/topology/path/PathLayer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/plugin/3D.js": {
            "name": "src/topology/topology/plugin/3D.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.ThreeDLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/plugin/Route.js": {
            "name": "src/topology/topology/plugin/Route.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.PathLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/plugin/Thumbnail.js": {
            "name": "src/topology/topology/plugin/Thumbnail.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Thumbnail": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/DefaultScene.js": {
            "name": "src/topology/topology/scene/DefaultScene.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.DefaultScene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/Scene.js": {
            "name": "src/topology/topology/scene/Scene.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/SceneMixin.js": {
            "name": "src/topology/topology/scene/SceneMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.SceneMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/SelectionNodeScene.js": {
            "name": "src/topology/topology/scene/SelectionNodeScene.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.SelectionNodeScene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/SelectionScene.js": {
            "name": "src/topology/topology/scene/SelectionScene.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.SelectionScene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/scene/ZoomBySelection.js": {
            "name": "src/topology/topology/scene/ZoomBySelection.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.ZoomBySelection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/LinkSetTooltip.js": {
            "name": "src/topology/topology/tooltip/LinkSetTooltip.js",
            "modules": {},
            "classes": {
                "nx.graphic.LinkSetTooltipContent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/LinkTooltip.js": {
            "name": "src/topology/topology/tooltip/LinkTooltip.js",
            "modules": {},
            "classes": {
                "nx.graphic.LinkTooltipContent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/NodeTooltip.js": {
            "name": "src/topology/topology/tooltip/NodeTooltip.js",
            "modules": {},
            "classes": {
                "nx.graphic.NodeTooltipContent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/TooltipManager.js": {
            "name": "src/topology/topology/tooltip/TooltipManager.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.TooltipManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/TooltipMixin.js": {
            "name": "src/topology/topology/tooltip/TooltipMixin.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.TooltipMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/TooltipPolicy.js": {
            "name": "src/topology/topology/tooltip/TooltipPolicy.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.TooltipPolicy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/topology/tooltip/TopologyTooltip.js": {
            "name": "src/topology/topology/tooltip/TopologyTooltip.js",
            "modules": {},
            "classes": {
                "nx.graphic.Topology.Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/ui/Popover.js": {
            "name": "src/topology/ui/Popover.js",
            "modules": {},
            "classes": {
                "nx.ui.Popover": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/ui/Popup.js": {
            "name": "src/topology/ui/Popup.js",
            "modules": {},
            "classes": {
                "nx.ui.Popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/ui/PopupContainer.js": {
            "name": "src/topology/ui/PopupContainer.js",
            "modules": {},
            "classes": {
                "nx.ui.PopupContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/ui/ZIndexManager.js": {
            "name": "src/topology/ui/ZIndexManager.js",
            "modules": {},
            "classes": {
                "nx.widget.ZIndexManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/topology/util/Animation.js": {
            "name": "src/topology/util/Animation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/topology/util/query.js": {
            "name": "src/topology/util/query.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "nx.graphic": {
            "name": "nx.graphic",
            "submodules": {},
            "classes": {
                "nx.geometry.nx.graphic.Arc": 1,
                "nx.graphic.Component": 1,
                "nx.graphic.DragManager": 1,
                "nx.graphic.BezierCurves": 1,
                "nx.graphic.Circle": 1,
                "nx.graphic.Group": 1,
                "nx.graphic.Icon": 1,
                "nx.graphic.Icons": 1,
                "nx.graphic.Image": 1,
                "nx.graphic.Line": 1,
                "nx.graphic.Path": 1,
                "nx.graphic.Polygon": 1,
                "nx.graphic.Rect": 1,
                "nx.graphic.Stage": 1,
                "nx.graphic.Text": 1,
                "nx.graphic.Triangle": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/topology/svg/Triangle.js",
            "line": 2,
            "description": "SVG Arc component"
        },
        "nx.data": {
            "name": "nx.data",
            "submodules": {},
            "classes": {
                "nx.data.ObservableGraph": 1,
                "nx.data.ObservableGraph.ForceProcessor": 1,
                "nx.data.Convex": 1,
                "nx.data.Edge": 1,
                "nx.data.EdgeSet": 1,
                "nx.data.EdgeSetCollection": 1,
                "nx.data.Vertex": 1,
                "nx.data.VertexSet": 1,
                "nx.geometry.BezierCurve": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            },
            "tag": "module",
            "file": "src/topology/geometry/BezierCurve.js",
            "line": 2,
            "description": "ObservableGraph class"
        },
        "nx.math": {
            "name": "nx.math",
            "submodules": {},
            "classes": {
                "nx.data.Force": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/topology/data/NeXtForce.js",
            "line": 3,
            "description": "Mathematics Line class"
        },
        "nx.geometry": {
            "name": "nx.geometry",
            "submodules": {},
            "classes": {
                "nx.geometry.Line": 1,
                "nx.geometry.Math": 1,
                "nx.geometry.Matrix": 1,
                "nx.geometry.Vector": 1
            },
            "fors": {},
            "namespaces": {
                "nx.geometry": 1
            },
            "tag": "module",
            "file": "src/topology/geometry/Vector.js",
            "line": 2,
            "description": "Mathematics Line class"
        },
        "nx.graphic.Topology": {
            "name": "nx.graphic.Topology",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "nx.graphic.Topology.GroupsLayer": 1,
                "nx.graphic.Topology.Layer": 1,
                "nx.graphic.Topology.Categories": 1,
                "nx.graphic.Topology.Config": 1,
                "nx.graphic.Topology.Event": 1,
                "nx.graphic.Topology.Graph": 1,
                "nx.graphic.Topology.StageMixin": 1,
                "nx.graphic.Topology": 1,
                "nx.graphic.Topology.LayoutMixin": 1,
                "nx.graphic.Topology.NeXtForceLayout": 1,
                "nx.graphic.Topology.USMapLayout": 1,
                "nx.graphic.Topology.WorldMapLayout": 1,
                "nx.graphic.Topology.AbstractLink": 1,
                "nx.graphic.Topology.Link": 1,
                "nx.graphic.Topology.LinkMixin": 1,
                "nx.graphic.Topology.LinkSet": 1,
                "nx.graphic.Topology.LinksLayer": 1,
                "nx.graphic.Topology.AbstractNode": 1,
                "nx.graphic.Topology.Node": 1,
                "nx.graphic.Topology.NodeMixin": 1,
                "nx.graphic.Topology.NodeSet": 1,
                "nx.graphic.Topology.NodesLayer": 1,
                "nx.graphic.Topology.Path": 1,
                "nx.graphic.Topology.PathLayer": 1,
                "nx.graphic.Topology.ThreeDLayer": 1,
                "nx.graphic.Topology.Thumbnail": 1,
                "nx.graphic.Topology.DefaultScene": 1,
                "nx.graphic.Topology.Scene": 1,
                "nx.graphic.Topology.SceneMixin": 1,
                "nx.graphic.Topology.SelectionNodeScene": 1,
                "nx.graphic.Topology.SelectionScene": 1,
                "nx.graphic.Topology.ZoomBySelection": 1,
                "nx.graphic.LinkSetTooltipContent": 1,
                "nx.graphic.LinkTooltipContent": 1,
                "nx.graphic.NodeTooltipContent": 1,
                "nx.graphic.Topology.TooltipManager": 1,
                "nx.graphic.Topology.TooltipMixin": 1,
                "nx.graphic.Topology.TooltipPolicy": 1,
                "nx.graphic.Topology.Tooltip": 1,
                "nx.ui.Popover": 1,
                "nx.ui.Popup": 1,
                "nx.ui.PopupContainer": 1,
                "nx.widget.ZIndexManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/topology/ui/ZIndexManager.js",
            "line": 3,
            "description": "Topology basic layer class"
        },
        "nx.graphic.Topology.Group": {
            "name": "nx.graphic.Topology.Group",
            "submodules": {},
            "classes": {
                "nx.graphic.Topology.PolygonGroup": 1,
                "nx.graphic.Topology.CircleGroup": 1,
                "nx.graphic.Topology.GroupItem": 1,
                "nx.graphic.Topology.RectGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/topology/topology/group/RectGroup.js",
            "line": 3,
            "description": "Polygon shape group class"
        }
    },
    "classes": {
        "nx.graphic.Component": {
            "name": "nx.graphic.Component",
            "shortname": "nx.graphic.Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "file": "src/topology/core/Component.js",
            "line": 26,
            "description": "Base class of graphic component",
            "extends": "nx.ui.Component"
        },
        "nx.graphic.DragManager": {
            "name": "nx.graphic.DragManager",
            "shortname": "nx.graphic.DragManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/core/DragManager.js",
            "line": 2,
            "description": "Global drag manager\n\n    var Component = nx.define(nx.ui.Component, {\n       view: {\n           content: {\n               name: \"stage\",\n               type: 'nx.graphic.TopologyStage',\n               props: {\n                   width: 600,\n                   height: 600\n               },\n               content: {\n                   name: 'a',\n                   type: 'nx.graphic.Rect',\n                   props: {\n                       x: 100,\n                       y: 10,\n                       width: 100,\n                       height: 100,\n                       fill: '#f0f'\n                   },\n                   events: {\n                       'mousedown': '{#_mousedown}',\n                       'dragmove': '{#_dragmove}'\n                   }\n               }\n           }\n       },\n       properties: {\n           positionX: {\n               value: 150\n           }\n       },\n       methods: {\n           _mousedown: function (sender, event) {\n               event.captureDrag(sender.owner());\n           },\n           _dragmove: function (sender, event) {\n               sender.set(\"x\", sender.get(\"x\") * 1 + event.drag.delta[0]);\n               sender.set(\"y\", sender.get(\"y\") * 1 + event.drag.delta[1]);\n           }\n\n       }\n    });\n\n\n    var app = new nx.ui.Application();\n    var comp = new Component();\n    comp.attach(app);",
            "static": 1,
            "extends": "nx.Observable"
        },
        "nx.data.ObservableGraph.ForceProcessor": {
            "name": "nx.data.ObservableGraph.ForceProcessor",
            "shortname": "nx.data.ObservableGraph.ForceProcessor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/processor/NeXtForce.js",
            "line": 2,
            "description": "Force layout processor"
        },
        "nx.data.Convex": {
            "name": "nx.data.Convex",
            "shortname": "nx.data.Convex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/Convex.js",
            "line": 2,
            "description": "Convex algorithm",
            "static": 1
        },
        "nx.data.Edge": {
            "name": "nx.data.Edge",
            "shortname": "nx.data.Edge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/Edge.js",
            "line": 4,
            "description": "Edge",
            "extends": "nx.data.ObservableObject"
        },
        "nx.data.EdgeSet": {
            "name": "nx.data.EdgeSet",
            "shortname": "nx.data.EdgeSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/EdgeSet.js",
            "line": 3,
            "description": "Edge set clas",
            "extends": "nx.data.Edge"
        },
        "nx.data.EdgeSetCollection": {
            "name": "nx.data.EdgeSetCollection",
            "shortname": "nx.data.EdgeSetCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/EdgeSetCollection.js",
            "line": 2,
            "description": "Edge set collection class",
            "extends": "nx.data.Edge"
        },
        "nx.geometry.Line": {
            "name": "nx.geometry.Line",
            "shortname": "nx.geometry.Line",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.geometry",
            "namespace": "",
            "file": "src/topology/geometry/Line.js",
            "line": 4,
            "description": "Mathematics Line class"
        },
        "nx.data.Force": {
            "name": "nx.data.Force",
            "shortname": "nx.data.Force",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.math",
            "namespace": "",
            "file": "src/topology/data/NeXtForce.js",
            "line": 3,
            "description": "NeXt force layout algorithm class"
        },
        "nx.data.ObservableGraph": {
            "name": "nx.data.ObservableGraph",
            "shortname": "nx.data.ObservableGraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/ObservableGraph.js",
            "line": 3,
            "description": "ObservableGraph class",
            "extends": "nx.data.ObservableObject"
        },
        "nx.data.Vertex": {
            "name": "nx.data.Vertex",
            "shortname": "nx.data.Vertex",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/Vertex.js",
            "line": 3,
            "description": "Vertex class",
            "extends": "nx.data.ObservableObject"
        },
        "nx.data.VertexSet": {
            "name": "nx.data.VertexSet",
            "shortname": "nx.data.VertexSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "",
            "file": "src/topology/data/VertexSet.js",
            "line": 3,
            "description": "Vertex set ckass",
            "extends": "nx.data.Vertex"
        },
        "nx.geometry.BezierCurve": {
            "name": "nx.geometry.BezierCurve",
            "shortname": "nx.geometry.BezierCurve",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.data",
            "namespace": "nx.geometry",
            "file": "src/topology/geometry/BezierCurve.js",
            "line": 2
        },
        "nx.geometry.Math": {
            "name": "nx.geometry.Math",
            "shortname": "nx.geometry.Math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.geometry",
            "namespace": "nx.geometry",
            "file": "src/topology/geometry/Math.js",
            "line": 2
        },
        "nx.geometry.Matrix": {
            "name": "nx.geometry.Matrix",
            "shortname": "nx.geometry.Matrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.geometry",
            "namespace": "nx.geometry",
            "file": "src/topology/geometry/Matrix.js",
            "line": 2
        },
        "nx.geometry.Vector": {
            "name": "nx.geometry.Vector",
            "shortname": "nx.geometry.Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.geometry",
            "namespace": "nx.geometry",
            "file": "src/topology/geometry/Vector.js",
            "line": 2
        },
        "nx.geometry.nx.graphic.Arc": {
            "name": "nx.geometry.nx.graphic.Arc",
            "shortname": "nx.graphic.Arc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "nx.geometry",
            "file": "src/topology/svg/Arc.js",
            "line": 2,
            "description": "SVG Arc component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.BezierCurves": {
            "name": "nx.graphic.BezierCurves",
            "shortname": "nx.graphic.BezierCurves",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/BezierCurves.js",
            "line": 3,
            "description": "SVG BezierCurves component",
            "extends": "nx.graphic.Path"
        },
        "nx.graphic.Circle": {
            "name": "nx.graphic.Circle",
            "shortname": "nx.graphic.Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Circle.js",
            "line": 2,
            "description": "SVG circle component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Group": {
            "name": "nx.graphic.Group",
            "shortname": "nx.graphic.Group",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Group.js",
            "line": 3,
            "description": "SVG group component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Icon": {
            "name": "nx.graphic.Icon",
            "shortname": "nx.graphic.Icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/ICON.js",
            "line": 3,
            "description": "SVG icon component, which icon's define in nx framework",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Icons": {
            "name": "nx.graphic.Icons",
            "shortname": "nx.graphic.Icons",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Icons.js",
            "line": 3,
            "description": "Topology device icons collection",
            "static": 1
        },
        "nx.graphic.Image": {
            "name": "nx.graphic.Image",
            "shortname": "nx.graphic.Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Image.js",
            "line": 5,
            "description": "SVG image component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Line": {
            "name": "nx.graphic.Line",
            "shortname": "nx.graphic.Line",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Line.js",
            "line": 2,
            "description": "SVG line component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Path": {
            "name": "nx.graphic.Path",
            "shortname": "nx.graphic.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Path.js",
            "line": 2,
            "description": "SVG path component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Polygon": {
            "name": "nx.graphic.Polygon",
            "shortname": "nx.graphic.Polygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Polygon.js",
            "line": 2,
            "description": "SVG polygon component",
            "extends": "nx.graphic.Path"
        },
        "nx.graphic.Rect": {
            "name": "nx.graphic.Rect",
            "shortname": "nx.graphic.Rect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Rect.js",
            "line": 2,
            "description": "SVG rect component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Stage": {
            "name": "nx.graphic.Stage",
            "shortname": "nx.graphic.Stage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Stage.js",
            "line": 3,
            "description": "SVG root component",
            "extends": "nx.ui.Component"
        },
        "nx.graphic.Text": {
            "name": "nx.graphic.Text",
            "shortname": "nx.graphic.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Text.js",
            "line": 2,
            "description": "SVG text component",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Triangle": {
            "name": "nx.graphic.Triangle",
            "shortname": "nx.graphic.Triangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic",
            "namespace": "",
            "file": "src/topology/svg/Triangle.js",
            "line": 2,
            "description": "SVG triangle component",
            "extends": "nx.graphic.Path"
        },
        "nx.graphic.Topology.Categories": {
            "name": "nx.graphic.Topology.Categories",
            "shortname": "nx.graphic.Topology.Categories",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/Categories.js",
            "line": 2,
            "description": "Topology's batch operation class"
        },
        "nx.graphic.Topology.Config": {
            "name": "nx.graphic.Topology.Config",
            "shortname": "nx.graphic.Topology.Config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/Config.js",
            "line": 3,
            "description": "Topology's base config"
        },
        "nx.graphic.Topology.Event": {
            "name": "nx.graphic.Topology.Event",
            "shortname": "nx.graphic.Topology.Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/Event.js",
            "line": 14,
            "description": "Topology base events"
        },
        "nx.graphic.Topology.Graph": {
            "name": "nx.graphic.Topology.Graph",
            "shortname": "nx.graphic.Topology.Graph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/Graph.js",
            "line": 3,
            "description": "Topology graph model class"
        },
        "nx.graphic.Topology.StageMixin": {
            "name": "nx.graphic.Topology.StageMixin",
            "shortname": "nx.graphic.Topology.StageMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 2,
            "description": "Topology stage class"
        },
        "nx.graphic.Topology": {
            "name": "nx.graphic.Topology",
            "shortname": "nx.graphic.Topology",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/core/Topology.js",
            "line": 2,
            "description": "Topology base class\n\n    var topologyData = {\n       nodes: [\n           {\"id\": 0, \"x\": 410, \"y\": 100, \"name\": \"12K-1\"},\n           {\"id\": 1, \"x\": 410, \"y\": 280, \"name\": \"12K-2\"},\n           {\"id\": 2, \"x\": 660, \"y\": 280, \"name\": \"Of-9k-03\"},\n           {\"id\": 3, \"x\": 660, \"y\": 100, \"name\": \"Of-9k-02\"},\n           {\"id\": 4, \"x\": 180, \"y\": 190, \"name\": \"Of-9k-01\"}\n       ],\n       links: [\n           {\"source\": 0, \"target\": 1},\n           {\"source\": 1, \"target\": 2},\n           {\"source\": 1, \"target\": 3},\n           {\"source\": 4, \"target\": 1},\n           {\"source\": 2, \"target\": 3},\n           {\"source\": 2, \"target\": 0},\n           {\"source\": 3, \"target\": 0},\n           {\"source\": 3, \"target\": 0},\n           {\"source\": 3, \"target\": 0},\n           {\"source\": 0, \"target\": 4},\n           {\"source\": 0, \"target\": 4},\n           {\"source\": 0, \"target\": 3}\n       ]\n    };\n    nx.define('MyTopology', nx.ui.Component, {\n       view: {\n           content: {\n               type: 'nx.graphic.Topology',\n               props: {\n                   width: 800,\n                   height: 800,\n                   nodeConfig: {\n                       label: 'model.id'\n                   },\n                   showIcon: true,\n                   data: topologyData\n               }\n           }\n       }\n    });\n    var app = new nx.ui.Application();\n    var comp = new MyTopology();\n    comp.attach(app);",
            "extends": "nx.ui.Component",
            "uses": [
                "nx.graphic.Topology.Config",
                "nx.graphic.Topology.Projection",
                "nx.graphic.Topology.Graph",
                "nx.graphic.Topology.Event",
                "nx.graphic.Topology.StageMixin",
                "nx.graphic.Topology.NodeMixin",
                "nx.graphic.Topology.LinkMixin",
                "nx.graphic.Topology.LayerMixin",
                "nx.graphic.Topology.TooltipMixin",
                "nx.graphic.Topology.SceneMixin"
            ]
        },
        "nx.graphic.Topology.CircleGroup": {
            "name": "nx.graphic.Topology.CircleGroup",
            "shortname": "nx.graphic.Topology.CircleGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology.Group",
            "namespace": "",
            "file": "src/topology/topology/group/CircleGroup.js",
            "line": 2,
            "description": "Circle shape group class",
            "extends": "nx.graphic.Topology.GroupItem"
        },
        "nx.graphic.Topology.GroupItem": {
            "name": "nx.graphic.Topology.GroupItem",
            "shortname": "nx.graphic.Topology.GroupItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology.Group",
            "namespace": "",
            "file": "src/topology/topology/group/GroupItem.js",
            "line": 3,
            "description": "Base group shape class",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Topology.GroupsLayer": {
            "name": "nx.graphic.Topology.GroupsLayer",
            "shortname": "nx.graphic.Topology.GroupsLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 16,
            "description": "Topology group layer class\n\n    var groupsLayer = topo.getLayer('groups');\n    var nodes1 = [0, 1];\n    var group1 = groupsLayer.addGroup({\n                   nodes: nodes1,\n                   label: 'Rect',\n                   color: '#f00'\n               });\n    group1.on('clickGroupLabel', function (sender, events) {\n                   console.log(group1.nodes());\n               }, this);",
            "extends": "nx.graphic.Topology.Layer"
        },
        "nx.graphic.Topology.PolygonGroup": {
            "name": "nx.graphic.Topology.PolygonGroup",
            "shortname": "nx.graphic.Topology.PolygonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology.Group",
            "namespace": "",
            "file": "src/topology/topology/group/PolygonGroup.js",
            "line": 4,
            "description": "Polygon shape group class",
            "extends": "nx.graphic.Topology.GroupItem"
        },
        "nx.graphic.Topology.RectGroup": {
            "name": "nx.graphic.Topology.RectGroup",
            "shortname": "nx.graphic.Topology.RectGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology.Group",
            "namespace": "",
            "file": "src/topology/topology/group/RectGroup.js",
            "line": 3,
            "description": "Rectangle shape group class",
            "extends": "nx.graphic.Topology.GroupItem"
        },
        "nx.graphic.Topology.Layer": {
            "name": "nx.graphic.Topology.Layer",
            "shortname": "nx.graphic.Topology.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/layer/Layer.js",
            "line": 3,
            "description": "Topology basic layer class",
            "extends": "nx.graphic.Group"
        },
        "nx.graphic.Topology.LayoutMixin": {
            "name": "nx.graphic.Topology.LayoutMixin",
            "shortname": "nx.graphic.Topology.LayoutMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 2,
            "description": "Layout mixin class"
        },
        "nx.graphic.Topology.NeXtForceLayout": {
            "name": "nx.graphic.Topology.NeXtForceLayout",
            "shortname": "nx.graphic.Topology.NeXtForceLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/layout/NeXtForceLayout.js",
            "line": 3,
            "description": "Topology force layout"
        },
        "nx.graphic.Topology.USMapLayout": {
            "name": "nx.graphic.Topology.USMapLayout",
            "shortname": "nx.graphic.Topology.USMapLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/layout/USMapLayout.js",
            "line": 21,
            "description": "US map layout class\n\n    files:\nexample\n\n    var topo = new nx.graphic.Topology({\n       adaptive: true,\n       nodeConfig: {\n                       label: 'model.name'\n                   },\n       showIcon: false,\n       layoutType: 'USMap',\n       layoutConfig: {\n           longitude: 'model.longitude',\n           latitude: 'model.latitude'\n       },\n       data: topologyData\n    })"
        },
        "nx.graphic.Topology.WorldMapLayout": {
            "name": "nx.graphic.Topology.WorldMapLayout",
            "shortname": "nx.graphic.Topology.WorldMapLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/layout/WorldMapLayout.js",
            "line": 12,
            "description": "World map layout, this require d3.js and d3 topojsonv1.js\n\n    files:\n    http://d3js.org/d3.v3.min.js\n    http://d3js.org/topojson.v1.min.js\n\nexample\n\n    var topo = new nx.graphic.Topology({\n       adaptive: true,\n       nodeConfig: {\n                       label: 'model.name'\n                   },\n       showIcon: false,\n       identityKey: 'name',\n       layoutType: 'WorldMap',\n       layoutConfig: {\n           longitude: 'model.longitude',\n           latitude: 'model.latitude',\n           worldTopoJson: 'lib/world-50m.json'\n       },\n       data: topologyData\n    })"
        },
        "nx.graphic.Topology.AbstractLink": {
            "name": "nx.graphic.Topology.AbstractLink",
            "shortname": "nx.graphic.Topology.AbstractLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 5,
            "description": "Abstract link class",
            "extends": "nx.graphic.Group"
        },
        "nx.graphic.Topology.Link": {
            "name": "nx.graphic.Topology.Link",
            "shortname": "nx.graphic.Topology.Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/link/Link.js",
            "line": 4,
            "description": "Link class",
            "extends": "nx.graphic.Topology.AbstractLink"
        },
        "nx.graphic.Topology.LinkMixin": {
            "name": "nx.graphic.Topology.LinkMixin",
            "shortname": "nx.graphic.Topology.LinkMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 3,
            "description": "Links mixin class"
        },
        "nx.graphic.Topology.LinkSet": {
            "name": "nx.graphic.Topology.LinkSet",
            "shortname": "nx.graphic.Topology.LinkSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 6,
            "description": "LinkSet class",
            "extends": "nx.graphic.Topology.AbstractLink"
        },
        "nx.graphic.Topology.LinksLayer": {
            "name": "nx.graphic.Topology.LinksLayer",
            "shortname": "nx.graphic.Topology.LinksLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 4,
            "description": "Links layer\n    Could use topo.getLayer('links') get this",
            "extends": "nx.graphic.Topology.Layer"
        },
        "nx.graphic.Topology.AbstractNode": {
            "name": "nx.graphic.Topology.AbstractNode",
            "shortname": "nx.graphic.Topology.AbstractNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 4,
            "description": "Abstract node class",
            "extends": "nx.graphic.Group"
        },
        "nx.graphic.Topology.Node": {
            "name": "nx.graphic.Topology.Node",
            "shortname": "nx.graphic.Topology.Node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/node/Node.js",
            "line": 2,
            "description": "Node class",
            "extends": "nx.graphic.Topology.AbstractNode"
        },
        "nx.graphic.Topology.NodeMixin": {
            "name": "nx.graphic.Topology.NodeMixin",
            "shortname": "nx.graphic.Topology.NodeMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 6,
            "description": "Node mixin class"
        },
        "nx.graphic.Topology.NodeSet": {
            "name": "nx.graphic.Topology.NodeSet",
            "shortname": "nx.graphic.Topology.NodeSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/node/NodeSet.js",
            "line": 3,
            "description": "NodeSet class",
            "extends": "nx.graphic.Topology.Node"
        },
        "nx.graphic.Topology.NodesLayer": {
            "name": "nx.graphic.Topology.NodesLayer",
            "shortname": "nx.graphic.Topology.NodesLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 3,
            "description": "Nodes layer\n    Could use topo.getLayer('nodes') get this",
            "extends": "nx.graphic.Topology.Layer"
        },
        "nx.graphic.Topology.Path": {
            "name": "nx.graphic.Topology.Path",
            "shortname": "nx.graphic.Topology.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/path/Path.js",
            "line": 7,
            "description": "A topology path class\n    Path's background colors : ['#b2e47f', '#e4e47f', '#bec2f9', '#b6def7', '#89f0de']",
            "extends": "nx.graphic.Component"
        },
        "nx.graphic.Topology.PathLayer": {
            "name": "nx.graphic.Topology.PathLayer",
            "shortname": "nx.graphic.Topology.PathLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/plugin/Route.js",
            "line": 3,
            "description": "Path layer class\n    Could use topo.getLayer(\"pathLayer\") get this",
            "extends": "nx.graphic.Topology.Layer"
        },
        "nx.graphic.Topology.ThreeDLayer": {
            "name": "nx.graphic.Topology.ThreeDLayer",
            "shortname": "nx.graphic.Topology.ThreeDLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/plugin/3D.js",
            "line": 2,
            "description": "Topology 3D layer,demo only",
            "extends": "nx.graphic.Topology.Scene"
        },
        "nx.graphic.Topology.Thumbnail": {
            "name": "nx.graphic.Topology.Thumbnail",
            "shortname": "nx.graphic.Topology.Thumbnail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/plugin/Thumbnail.js",
            "line": 4,
            "description": "Thumbnail for topology",
            "extends": "nx.ui.Component"
        },
        "nx.graphic.Topology.DefaultScene": {
            "name": "nx.graphic.Topology.DefaultScene",
            "shortname": "nx.graphic.Topology.DefaultScene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/DefaultScene.js",
            "line": 2,
            "description": "Default Scene for topology",
            "extends": "nx.graphic.Topology.Scene"
        },
        "nx.graphic.Topology.Scene": {
            "name": "nx.graphic.Topology.Scene",
            "shortname": "nx.graphic.Topology.Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/Scene.js",
            "line": 3,
            "description": "Basic scene class",
            "extends": "nx.data.ObservableObject"
        },
        "nx.graphic.Topology.SceneMixin": {
            "name": "nx.graphic.Topology.SceneMixin",
            "shortname": "nx.graphic.Topology.SceneMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 2,
            "description": "Scene mixin"
        },
        "nx.graphic.Topology.SelectionNodeScene": {
            "name": "nx.graphic.Topology.SelectionNodeScene",
            "shortname": "nx.graphic.Topology.SelectionNodeScene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/SelectionNodeScene.js",
            "line": 3,
            "description": "Selection node scene",
            "extends": "nx.graphic.Topology.SelectionScene"
        },
        "nx.graphic.Topology.SelectionScene": {
            "name": "nx.graphic.Topology.SelectionScene",
            "shortname": "nx.graphic.Topology.SelectionScene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/SelectionScene.js",
            "line": 4,
            "description": "Selection scene",
            "extends": "nx.graphic.Topology.Scene"
        },
        "nx.graphic.Topology.ZoomBySelection": {
            "name": "nx.graphic.Topology.ZoomBySelection",
            "shortname": "nx.graphic.Topology.ZoomBySelection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/scene/ZoomBySelection.js",
            "line": 3,
            "description": "Zoom by selection scene",
            "extends": "nx.graphic.Topology.SelectionScene"
        },
        "nx.graphic.LinkSetTooltipContent": {
            "name": "nx.graphic.LinkSetTooltipContent",
            "shortname": "nx.graphic.LinkSetTooltipContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/LinkSetTooltip.js",
            "line": 2,
            "extends": "nx.ui.Component"
        },
        "nx.graphic.LinkTooltipContent": {
            "name": "nx.graphic.LinkTooltipContent",
            "shortname": "nx.graphic.LinkTooltipContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/LinkTooltip.js",
            "line": 2,
            "extends": "nx.ui.Component"
        },
        "nx.graphic.NodeTooltipContent": {
            "name": "nx.graphic.NodeTooltipContent",
            "shortname": "nx.graphic.NodeTooltipContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/NodeTooltip.js",
            "line": 2,
            "description": "Node tooltip content class",
            "extends": "nx.ui.Component"
        },
        "nx.graphic.Topology.TooltipManager": {
            "name": "nx.graphic.Topology.TooltipManager",
            "shortname": "nx.graphic.Topology.TooltipManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 4,
            "description": "Tooltip manager for topology",
            "extends": "nx.data.ObservableObject"
        },
        "nx.graphic.Topology.TooltipMixin": {
            "name": "nx.graphic.Topology.TooltipMixin",
            "shortname": "nx.graphic.Topology.TooltipMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "nx.graphic.Topology"
            ],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/TooltipMixin.js",
            "line": 3,
            "description": "Tooltip mixin class"
        },
        "nx.graphic.Topology.TooltipPolicy": {
            "name": "nx.graphic.Topology.TooltipPolicy",
            "shortname": "nx.graphic.Topology.TooltipPolicy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/TooltipPolicy.js",
            "line": 2,
            "description": "Topology tooltip policy"
        },
        "nx.graphic.Topology.Tooltip": {
            "name": "nx.graphic.Topology.Tooltip",
            "shortname": "nx.graphic.Topology.Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/topology/tooltip/TopologyTooltip.js",
            "line": 2,
            "description": "Basic tooltip class for topology",
            "extends": "nx.ui.Popover"
        },
        "nx.ui.Popover": {
            "name": "nx.ui.Popover",
            "shortname": "nx.ui.Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/ui/Popover.js",
            "line": 3,
            "description": "UI popover class",
            "extends": "nx.ui.Popup"
        },
        "nx.ui.Popup": {
            "name": "nx.ui.Popup",
            "shortname": "nx.ui.Popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/ui/Popup.js",
            "line": 5,
            "description": "Base popup class",
            "extends": "nx.ui.Component"
        },
        "nx.ui.PopupContainer": {
            "name": "nx.ui.PopupContainer",
            "shortname": "nx.ui.PopupContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/ui/PopupContainer.js",
            "line": 19,
            "description": "Popup container",
            "static": 1
        },
        "nx.widget.ZIndexManager": {
            "name": "nx.widget.ZIndexManager",
            "shortname": "nx.widget.ZIndexManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nx.graphic.Topology",
            "namespace": "",
            "file": "src/topology/ui/ZIndexManager.js",
            "line": 3,
            "description": "Popup z-index mamager",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/topology/core/Component.js",
            "line": 34,
            "description": "Fire when drag start",
            "itemtype": "event",
            "name": "dragstart",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 40,
            "description": "Fire when drag move",
            "itemtype": "event",
            "name": "dragmove",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object , include delta[x,y] for the shift",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 46,
            "description": "Fire when drag end",
            "itemtype": "event",
            "name": "dragend",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 54,
            "description": "Set/get x translate",
            "itemtype": "property",
            "name": "translateX",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 63,
            "description": "Set/get y translate",
            "itemtype": "property",
            "name": "translateY",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 72,
            "description": "Set/get scale",
            "itemtype": "property",
            "name": "scale",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 81,
            "description": "Set/get translate, it set/get as {x:number,y:number}",
            "itemtype": "property",
            "name": "translate",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 96,
            "description": "Set/get element's visibility",
            "itemtype": "property",
            "name": "visible",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 116,
            "description": "Set/get css class",
            "itemtype": "property",
            "name": "class",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 141,
            "description": "Set component's transform",
            "itemtype": "method",
            "name": "setTransform",
            "params": [
                {
                    "name": "translateX",
                    "description": "x axle translate",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "translateY",
                    "description": "y axle translate",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "scale",
                    "description": "element's scale",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "duration",
                    "description": "transition time, unite is second",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 164,
            "description": "Set component's css style",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "key",
                    "description": "css key",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "css value",
                    "type": "*"
                },
                {
                    "name": "duration",
                    "description": "set transition time",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "callback",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 211,
            "description": "Append component's element to parent node or other dom element",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "nx.graphic.Component",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "append",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 227,
            "description": "Remove component's element from dom tree",
            "itemtype": "method",
            "name": "remove",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 237,
            "description": "Get component's bound, delegate element's getBoundingClientRect function",
            "itemtype": "method",
            "name": "getBound",
            "return": {
                "description": "",
                "type": "*|ClientRect"
            },
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 248,
            "description": "Hide component",
            "itemtype": "method",
            "name": "hide",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 255,
            "description": "Show component",
            "itemtype": "method",
            "name": "show",
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 262,
            "description": "Set animation for element,pass a config to this function\n{\n     to :{\n         attr1:value,\n         attr2:value,\n         ...\n     },\n     duration:Number,\n     complete:Function\n}",
            "itemtype": "method",
            "name": "animate",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/Component.js",
            "line": 312,
            "description": "Fired when animation completed",
            "itemtype": "event",
            "name": "animationCompleted",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Component",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 62,
            "description": "activated component.",
            "itemtype": "property",
            "name": "node",
            "type": "nx.graphic.Component",
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 67,
            "description": "All coordinate will reference to this element.",
            "itemtype": "property",
            "name": "referrer",
            "type": "DOMELement",
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 72,
            "description": "drag track",
            "itemtype": "property",
            "name": "track",
            "type": "Array",
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 77,
            "description": "Dragging indicator",
            "itemtype": "property",
            "name": "dragging",
            "type": "Boolean",
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 96,
            "description": "Start drag event capture",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "evt",
                    "description": "original dom event",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "function(this:nx.graphic.DragManager)"
            },
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 125,
            "description": "Drag move handler",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "evt",
                    "description": "original dom event",
                    "type": "Event"
                }
            ],
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/core/DragManager.js",
            "line": 143,
            "description": "Drag end",
            "itemtype": "method",
            "name": "end",
            "params": [
                {
                    "name": "evt",
                    "description": "original dom event",
                    "type": "Event"
                }
            ],
            "class": "nx.graphic.DragManager",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/data/processor/Force.js",
            "line": 9,
            "description": "Process graph data",
            "params": [
                {
                    "name": "data",
                    "description": "standard graph data",
                    "type": "JSON"
                },
                {
                    "name": "key",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "model",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "{JSON} standard graph data",
                "type": "JSON"
            },
            "class": "nx.data.ObservableGraph.ForceProcessor",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/processor/NeXtForce.js",
            "line": 9,
            "description": "Process graph data",
            "params": [
                {
                    "name": "data",
                    "description": "standard graph data",
                    "type": "JSON"
                },
                {
                    "name": "key",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "model",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "{JSON} standard graph data",
                "type": "JSON"
            },
            "class": "nx.data.ObservableGraph.ForceProcessor",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Convex.js",
            "line": 16,
            "description": "Process given node array",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "inPointArray",
                    "description": "Each item should be a object, which include x&y attribute",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.data.Convex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/DataProcessor.js",
            "line": 11,
            "description": "Register graph data processor,",
            "static": 1,
            "itemtype": "method",
            "name": "registerDataProcessor",
            "params": [
                {
                    "name": "name",
                    "description": "data processor name",
                    "type": "String"
                },
                {
                    "name": "cls",
                    "description": "processor instance, instance should have a process method",
                    "type": "Object"
                }
            ],
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/DataProcessor.js",
            "line": 23,
            "description": "Set pre data processor,it could be 'force'/'quick'",
            "itemtype": "property",
            "name": "dataProcessor",
            "default": "undefined",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 15,
            "description": "Source vertex",
            "itemtype": "property",
            "name": "source",
            "type": "nx.data.Vertex",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 22,
            "description": "Target vertex",
            "itemtype": "property",
            "name": "target",
            "type": "nx.data.Vertex",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 29,
            "description": "Source vertex id",
            "itemtype": "property",
            "name": "sourceID",
            "type": "String|Number",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 36,
            "description": "Target vertex id",
            "itemtype": "property",
            "name": "targetID",
            "type": "String|Number",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 43,
            "description": "Edge's linkkey, linkkey = sourceID-targetID",
            "itemtype": "property",
            "name": "linkKey",
            "type": "String",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 50,
            "description": "Edge's reverse linkkey,reverseLinkKey = targetID + '_' + sourceID",
            "itemtype": "property",
            "name": "reverseLinkKey",
            "type": "String",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 58,
            "description": "Status property,tag is this edge generated",
            "itemtype": "property",
            "name": "generated",
            "type": "Boolean",
            "default": "false",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 66,
            "description": "Status property,tag is this edge updated",
            "itemtype": "property",
            "name": "updated",
            "type": "Boolean",
            "default": "false",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 74,
            "description": "Edge's type",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "edge",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 82,
            "description": "Edge's id",
            "itemtype": "property",
            "name": "id",
            "type": "String|Number",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 87,
            "description": "Edge's parent edge set",
            "itemtype": "property",
            "name": "parentEdgeSet",
            "type": "nx.data.edgeSet",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 92,
            "description": "Edge line object",
            "itemtype": "property",
            "name": "line",
            "type": "nx.geometry.Line",
            "readonly": "",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 102,
            "description": "Edge position object\n{{x1: (Number), y1: (Number), x2: (Number), y2: (Number)}}",
            "itemtype": "property",
            "name": "position",
            "type": "Object",
            "readonly": "",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 118,
            "description": "Is this link is a reverse link",
            "itemtype": "property",
            "name": "reverse",
            "type": "Boolean",
            "readonly": "",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 126,
            "description": "Graph instance",
            "itemtype": "property",
            "name": "graph",
            "type": "nx.data.ObservableGraph",
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edge.js",
            "line": 135,
            "description": "Get original data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "nx.data.Edge",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSet.js",
            "line": 12,
            "description": "All child edges",
            "itemtype": "property",
            "name": "edges",
            "type": "Object",
            "class": "nx.data.EdgeSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSet.js",
            "line": 21,
            "description": "Edge's type",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'edgeSet'",
            "class": "nx.data.EdgeSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSet.js",
            "line": 47,
            "description": "Add child edge",
            "itemtype": "method",
            "name": "addEdge",
            "params": [
                {
                    "name": "edge",
                    "description": "",
                    "type": "nx.data.Edge"
                }
            ],
            "class": "nx.data.EdgeSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSet.js",
            "line": 56,
            "description": "Remove child edge",
            "itemtype": "method",
            "name": "removeEdge",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.data.EdgeSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollection.js",
            "line": 11,
            "description": "All child edgeset",
            "itemtype": "property",
            "name": "edgeSets",
            "type": "Object",
            "class": "nx.data.EdgeSetCollection",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollection.js",
            "line": 29,
            "description": "Edge's type",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'edgeSet'",
            "class": "nx.data.EdgeSetCollection",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollection.js",
            "line": 68,
            "description": "Add child edgeSet",
            "itemtype": "method",
            "name": "addEdgeSet",
            "params": [
                {
                    "name": "edgeSet",
                    "description": "",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.data.EdgeSetCollection",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollection.js",
            "line": 77,
            "description": "Remove child edgeSet",
            "itemtype": "method",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "linkKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.data.EdgeSetCollection",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollections.js",
            "line": 68,
            "itemtype": "event",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSetCollections.js",
            "line": 86,
            "itemtype": "event",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSets.js",
            "line": 50,
            "itemtype": "event",
            "name": "addEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSets.js",
            "line": 61,
            "itemtype": "event",
            "name": "updateEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSets.js",
            "line": 83,
            "itemtype": "event",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSets.js",
            "line": 105,
            "itemtype": "event",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edgeSet",
                    "description": "EdgeSet object",
                    "type": "nx.data.EdgeSet"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/EdgeSets.js",
            "line": 119,
            "description": "Get edgeSet by source vertex id and target vertex id",
            "itemtype": "method",
            "name": "getEdgeSetBySourceAndTarget",
            "params": [
                {
                    "name": "source",
                    "description": "could be vertex object or id",
                    "type": "nx.data.Vertex|Number|String"
                },
                {
                    "name": "target",
                    "description": "could be vertex object or id",
                    "type": "nx.data.Vertex|Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.data.EdgeSet"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 55,
            "description": "Add edge to Graph",
            "itemtype": "method",
            "name": "addEdge",
            "params": [
                {
                    "name": "data",
                    "description": "Vertex original data",
                    "type": "JSON"
                },
                {
                    "name": "config",
                    "description": "Config object",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "nx.data.Edge"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 187,
            "itemtype": "event",
            "name": "addEdge",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edge",
                    "description": "Edge object",
                    "type": "nx.data.Edge"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 196,
            "description": "Remove edge from Graph",
            "itemtype": "method",
            "name": "removeEdge",
            "params": [
                {
                    "name": "id",
                    "description": "edge id",
                    "type": "String"
                },
                {
                    "name": "isUpdateEdgeSet",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 209,
            "itemtype": "event",
            "name": "removeEdge",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edge",
                    "description": "Edge object",
                    "type": "nx.data.Edge"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 255,
            "itemtype": "event",
            "name": "deleteEdge",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "edge",
                    "description": "Edge object",
                    "type": "nx.data.Edge"
                }
            ],
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 273,
            "description": "Get edges by source vertex id and target vertex id",
            "itemtype": "method",
            "name": "getEdgesBySourceAndTarget",
            "params": [
                {
                    "name": "source",
                    "description": "could be vertex object or id",
                    "type": "nx.data.Vertex|Number|String"
                },
                {
                    "name": "target",
                    "description": "could be vertex object or id",
                    "type": "nx.data.Vertex|Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 284,
            "description": "Get edges which are connected to passed vertices",
            "itemtype": "method",
            "name": "getEdgesByVertices",
            "params": [
                {
                    "name": "inVertices",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 301,
            "description": "Get edges which's source and target vertex are both in the passed vertices",
            "itemtype": "method",
            "name": "getInternalEdgesByVertices",
            "params": [
                {
                    "name": "inVertices",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Edges.js",
            "line": 328,
            "description": "Get edges which's  just one of source or target vertex in the passed vertices. All edges connected ourside of passed vertices",
            "itemtype": "method",
            "name": "getInternalEdgesByVertices",
            "params": [
                {
                    "name": "inVertices",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 10,
            "description": "Line class constructor function",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "nx.geometry.Vector"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "is_constructor": 1,
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 24,
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 31,
            "itemtype": "method",
            "name": "squaredLength",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 38,
            "itemtype": "method",
            "name": "angle",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 45,
            "methid": "intersection",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 56,
            "itemtype": "method",
            "name": "center",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 63,
            "itemtype": "method",
            "name": "slope",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 70,
            "itemtype": "method",
            "name": "general",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 84,
            "itemtype": "method",
            "name": "intersection",
            "params": [
                {
                    "name": "l",
                    "description": "",
                    "type": "nx.geometry.Line"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 97,
            "itemtype": "method",
            "name": "pedal",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 111,
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "mx.math.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 120,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 128,
            "itemtype": "method",
            "name": "negate",
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 135,
            "itemtype": "method",
            "name": "normal",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 143,
            "itemtype": "method",
            "name": "pad",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "nx.geometry.Vector"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/Line.js",
            "line": 153,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/NeXtForce.js",
            "line": 8,
            "description": "Force layout algorithm class constructor function",
            "params": [
                {
                    "name": "inWidth",
                    "description": "force stage width, default 800",
                    "type": "Number"
                },
                {
                    "name": "inHeight",
                    "description": "force stage height, default 800",
                    "type": "Number"
                }
            ],
            "is_constructor": 1,
            "class": "nx.data.Force",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/NeXtForce.js",
            "line": 32,
            "description": "Set data to this algorithm",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "inJson",
                    "description": "Follow Common Topology Data Definition",
                    "type": "Object"
                }
            ],
            "class": "nx.data.Force",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/NeXtForce.js",
            "line": 67,
            "description": "Start processing",
            "itemtype": "method",
            "name": "start",
            "class": "nx.data.Force",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/NeXtForce.js",
            "line": 80,
            "description": "Tick whole force stage",
            "itemtype": "method",
            "name": "tick",
            "class": "nx.data.Force",
            "module": "nx.math"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 20,
            "description": "Use this attribute of original data as vertex's id and link's mapping key\ndefault is index, if not set use array's index as id",
            "itemtype": "property",
            "name": "identityKey",
            "type": "String",
            "default": "'index'",
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 46,
            "description": "Set data, data should follow Common Topology Data Definition",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "inData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 59,
            "description": "Trigger when set data to ObservableGraph",
            "itemtype": "event",
            "name": "setData",
            "params": [
                {
                    "name": "sender",
                    "description": "event trigger",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "data, which been processed by data processor",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 98,
            "description": "Insert data, data should follow Common Topology Data Definition",
            "itemtype": "method",
            "name": "insertData",
            "params": [
                {
                    "name": "inData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 119,
            "description": "Trigger when insert data to ObservableGraph",
            "itemtype": "event",
            "name": "insertData",
            "params": [
                {
                    "name": "sender",
                    "description": "event trigger",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "data, which been processed by data processor",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 140,
            "description": "Fired when start generate topology elements",
            "itemtype": "event",
            "name": "startGenerate",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 168,
            "description": "Fired when finish generate topology elements",
            "itemtype": "event",
            "name": "endGenerate",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 179,
            "description": "Get original data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 193,
            "description": "Get original json object",
            "itemtype": "method",
            "name": "getJSON",
            "params": [
                {
                    "name": "inData",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "}",
                "type": "Nodes: Array, links: Array,nodeSet:Array"
            },
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 250,
            "description": "Get visible vertices data bound",
            "itemtype": "method",
            "name": "getBound",
            "return": {
                "description": "}",
                "type": "X: number, y: number, width: number, height: number, maxX: number, maxY: number"
            },
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/ObservableGraph.js",
            "line": 347,
            "description": "Clear graph data",
            "itemtype": "method",
            "name": "clear",
            "class": "nx.data.ObservableGraph",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 15,
            "description": "Vertex id",
            "itemtype": "property",
            "name": "id",
            "type": "String|Number",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 20,
            "itemtype": "property",
            "name": "positionGetter",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 33,
            "itemtype": "property",
            "name": "positionSetter",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 53,
            "description": "Get/set vertex position.",
            "itemtype": "property",
            "name": "position",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 96,
            "description": "Get/set x coordination, suggest use position property",
            "itemtype": "property",
            "name": "x",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 108,
            "description": "Get/set y coordination, suggest use position property",
            "itemtype": "property",
            "name": "y",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 120,
            "description": "Get vertex's Vector object",
            "readonly": "",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 133,
            "description": "Set/get vertex's visibility, and this property related to all connect edge set",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "true",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 169,
            "description": "Status property,tag is this vertex generated",
            "itemtype": "property",
            "name": "generated",
            "type": "Boolean",
            "default": "false",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 177,
            "description": "Status property,tag is this vertex updated",
            "itemtype": "property",
            "name": "updated",
            "type": "Boolean",
            "default": "false",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 185,
            "description": "Vertex's type",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'vertex'",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 193,
            "description": "connected edgeSets",
            "itemtype": "property",
            "name": "edgeSets",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 202,
            "description": "connected edgeSetCollections",
            "itemtype": "property",
            "name": "edgeSetCollections",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 211,
            "description": "Get connected edges",
            "itemtype": "property",
            "name": "edges",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 224,
            "description": "Get connected vertices",
            "itemtype": "property",
            "name": "connectedVertices",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 237,
            "description": "Graph instance",
            "itemtype": "property",
            "name": "graph",
            "type": "nx.data.ObservableGraph",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 244,
            "description": "Vertex parent vertex set, if exist",
            "itemtype": "property",
            "name": "parentVertexSet",
            "type": "nx.data.VertexSet",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 249,
            "description": "Vertex root vertexSet",
            "itemtype": "property",
            "name": "rootVertexSet",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 262,
            "description": "Generated Root VertexSet",
            "itemtype": "property",
            "name": "generatedRootVertexSet",
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 306,
            "description": "Get original data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 314,
            "description": "Add connected edgeSet, which source vertex is this vertex",
            "itemtype": "method",
            "name": "addEdgeSet",
            "params": [
                {
                    "name": "edgeSet",
                    "description": "",
                    "type": "nx.data.EdgeSet"
                },
                {
                    "name": "linkKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 324,
            "description": "Remove edgeSet from connected edges array",
            "itemtype": "method",
            "name": "removeEdgeSet",
            "params": [
                {
                    "name": "linkKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 341,
            "description": "Iterate all connected vertices",
            "itemtype": "method",
            "name": "eachConnectedVertex",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertex.js",
            "line": 363,
            "description": "Move vertex",
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "class": "nx.data.Vertex",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSet.js",
            "line": 50,
            "itemtype": "event",
            "name": "updateVertexSetCoordinate",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "{oldPosition:Point,newPosition:Point}",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.data.VertexSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSet.js",
            "line": 67,
            "description": "All child vertices",
            "itemtype": "property",
            "name": "vertices",
            "type": "Object",
            "default": "{}",
            "class": "nx.data.VertexSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSet.js",
            "line": 120,
            "description": "VertexSet's type",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'vertexset'",
            "class": "nx.data.VertexSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSet.js",
            "line": 165,
            "description": "Add child vertex",
            "itemtype": "method",
            "name": "addVertex",
            "params": [
                {
                    "name": "vertex",
                    "description": ""
                }
            ],
            "class": "nx.data.VertexSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSet.js",
            "line": 189,
            "description": "Remove vertex",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.data.VertexSet",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSets.js",
            "line": 62,
            "description": "Add vertex set to Graph",
            "itemtype": "method",
            "name": "addVertexSet",
            "params": [
                {
                    "name": "data",
                    "description": "Vertex set original data, which include nodes(Array) attribute. That is node's ID collection.  e.g. {nodes:[id1,id2,id3]}",
                    "type": "JSON"
                },
                {
                    "name": "config",
                    "description": "Config object",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "nx.data.VertexSet"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSets.js",
            "line": 179,
            "itemtype": "event",
            "name": "updateVertexSetCoordinate",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "vertexSet",
                    "description": "VertexSet object",
                    "type": "nx.data.VertexSet"
                }
            ],
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSets.js",
            "line": 189,
            "itemtype": "event",
            "name": "updateVertexSet",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "vertexSet",
                    "description": "VertexSet object",
                    "type": "nx.data.VertexSet"
                }
            ],
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/VertexSets.js",
            "line": 198,
            "description": "Remove a vertex set from Graph",
            "itemtype": "method",
            "name": "removeVertexSet",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 64,
            "description": "Add vertex to Graph",
            "itemtype": "method",
            "name": "addVertex",
            "params": [
                {
                    "name": "data",
                    "description": "Vertex original data",
                    "type": "JSON"
                },
                {
                    "name": "config",
                    "description": "Config object",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "nx.data.Vertex"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 167,
            "itemtype": "event",
            "name": "addVertex",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "vertex",
                    "description": "Vertex object",
                    "type": "nx.data.Vertex"
                }
            ],
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 177,
            "itemtype": "event",
            "name": "updateVertexCoordinate",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "vertex",
                    "description": "Vertex object",
                    "type": "nx.data.Vertex"
                }
            ],
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 186,
            "description": "Remove a vertex from Graph",
            "itemtype": "method",
            "name": "removeVertex",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 209,
            "itemtype": "event",
            "name": "removeVertex",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "vertex",
                    "description": "Vertex object",
                    "type": "nx.data.Vertex"
                }
            ],
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/data/Vertices.js",
            "line": 217,
            "description": "Delete a vertex from Graph",
            "itemtype": "method",
            "name": "removeVertex",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Id"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data"
        },
        {
            "file": "src/topology/geometry/BezierCurve.js",
            "line": 88,
            "itemtype": "method",
            "name": "separate",
            "params": [
                {
                    "name": "polyline",
                    "description": "List of intervals (interval=[point-from, point-to], point=[x, y])."
                },
                {
                    "name": "rate",
                    "description": "The rate to separate."
                }
            ],
            "return": {
                "description": "",
                "type": "Point:[x, y], left: leftPolyline, right: rightPolyline"
            },
            "class": "nx.geometry.BezierCurve",
            "module": "nx.data",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 16,
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 23,
            "itemtype": "method",
            "name": "squaredLength",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 30,
            "itemtype": "method",
            "name": "angle",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 37,
            "methid": "intersection",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 48,
            "itemtype": "method",
            "name": "center",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 55,
            "itemtype": "method",
            "name": "slope",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 62,
            "itemtype": "method",
            "name": "general",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 76,
            "itemtype": "method",
            "name": "intersection",
            "params": [
                {
                    "name": "l",
                    "description": "",
                    "type": "nx.geometry.Line"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 89,
            "itemtype": "method",
            "name": "pedal",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 103,
            "itemtype": "method",
            "name": "translate",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "mx.math.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 112,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 120,
            "itemtype": "method",
            "name": "negate",
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 127,
            "itemtype": "method",
            "name": "normal",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 135,
            "itemtype": "method",
            "name": "pad",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "nx.geometry.Vector"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Line.js",
            "line": 145,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "nx.geometry.Line"
            },
            "class": "nx.geometry.Line",
            "module": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/MatrixSupport.js",
            "line": 9,
            "itemtype": "property",
            "name": "matrixInversion",
            "type": "{Number[3][3]}",
            "readonly": "",
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 87,
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 95,
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 102,
            "itemtype": "method",
            "name": "squaredLength",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 112,
            "itemtype": "method",
            "name": "angle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 124,
            "itemtype": "method",
            "name": "circumferentialAngle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 136,
            "itemtype": "method",
            "name": "slope",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 143,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 151,
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "nx.geometry.Vector"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 159,
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "k",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 167,
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "k",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 175,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 188,
            "itemtype": "method",
            "name": "negate",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 195,
            "itemtype": "method",
            "name": "normal",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 203,
            "itemtype": "method",
            "name": "normalize",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/geometry/Vector.js",
            "line": 211,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "",
                "type": "nx.geometry.Vector"
            },
            "class": "nx.geometry.Vector",
            "module": "nx.geometry",
            "namespace": "nx.geometry"
        },
        {
            "file": "src/topology/svg/BezierCurves.js",
            "line": 12,
            "description": "set/get start point'x",
            "itemtype": "property",
            "name": "x1",
            "class": "nx.graphic.BezierCurves",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/BezierCurves.js",
            "line": 25,
            "description": "set/get start point'y",
            "itemtype": "property",
            "name": "y1",
            "class": "nx.graphic.BezierCurves",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/BezierCurves.js",
            "line": 38,
            "description": "set/get end point'x",
            "itemtype": "property",
            "name": "x2",
            "class": "nx.graphic.BezierCurves",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/BezierCurves.js",
            "line": 51,
            "description": "set/get end point'x",
            "itemtype": "property",
            "name": "y2",
            "class": "nx.graphic.BezierCurves",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/ICON.js",
            "line": 31,
            "description": "set/get icon's type",
            "itemtype": "property",
            "name": "iconType",
            "class": "nx.graphic.Icon",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/ICON.js",
            "line": 101,
            "description": "set/get icon size",
            "itemtype": "property",
            "name": "size",
            "class": "nx.graphic.Icon",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 11,
            "description": "Get icons collection",
            "static": 1,
            "itemtype": "property",
            "name": "icons",
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 19,
            "description": "Get icon by type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "get",
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 28,
            "description": "Get icon\"s svg string",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Element"
            },
            "itemtype": "method",
            "name": "getSVGString",
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 37,
            "description": "Get all types list",
            "return": {
                "description": "",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getTypeList",
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 45,
            "description": "Register a new icon to this collection",
            "itemtype": "method",
            "name": "registerIcon",
            "params": [
                {
                    "name": "name",
                    "description": "icon\"s name",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "icon\"s url",
                    "type": "URL"
                },
                {
                    "name": "width",
                    "description": "icon\"s width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "icon\"s height",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Icons.js",
            "line": 65,
            "description": "Iterate all icons",
            "params": [
                {
                    "name": "inCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "inContext",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "nx.graphic.Icons",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Image.js",
            "line": 13,
            "description": "Set/get image src",
            "itemtype": "property",
            "name": "src",
            "class": "nx.graphic.Image",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Polygon.js",
            "line": 12,
            "description": "Set/get point array to generate a polygon shape",
            "itemtype": "property",
            "name": "nodes",
            "class": "nx.graphic.Polygon",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 48,
            "description": "Is an animation in progress?",
            "itemtype": "property",
            "name": "animating",
            "type": "Boolean",
            "readonly": "",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 54,
            "description": "Set/get topology's scalability",
            "itemtype": "property",
            "name": "scalable",
            "type": "Boolean",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 61,
            "description": "Get the viewbox of current stage position.",
            "itemtype": "property",
            "name": "scalable",
            "type": "Boolean",
            "readonly": "",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 73,
            "description": "set/get stage's width",
            "itemtype": "property",
            "name": "width",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 80,
            "description": "set/get stage's height",
            "itemtype": "property",
            "name": "height",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 87,
            "description": "Stage scale",
            "itemtype": "property",
            "name": "stageScale",
            "type": "Number",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 94,
            "description": "Stage padding",
            "itemtype": "property",
            "name": "padding  0",
            "type": "Number",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 101,
            "description": "Topology max scaling",
            "itemtype": "property",
            "name": "maxScale",
            "type": "Number",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 108,
            "description": "Topology min scaling",
            "itemtype": "property",
            "name": "minScale",
            "type": "Number",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 118,
            "description": "Disable notify stageScale",
            "itemtype": "property",
            "name": "disableUpdateStageScale  false",
            "type": "Boolean",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 125,
            "description": "Stage transform matrix",
            "itemtype": "property",
            "name": "matrix  nx.geometry.Matrix.I",
            "type": "nx.geometry.Math",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 143,
            "description": "Matrix Object",
            "itemtype": "property",
            "name": "matrixObject",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 148,
            "description": "get content group element",
            "itemtype": "property",
            "name": "stage",
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 180,
            "description": "Add svg def element into the stage",
            "itemtype": "method",
            "name": "addDef",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "SVGDOM"
                }
            ],
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 188,
            "description": "Add svg def element into the stage in string format",
            "itemtype": "method",
            "name": "addDefString",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Stage.js",
            "line": 196,
            "description": "Get content's relative bound",
            "itemtype": "method",
            "name": "getContentBound",
            "return": {
                "description": "}",
                "type": "Left: number, top: number, width: Number, height: Number"
            },
            "class": "nx.graphic.Stage",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/svg/Text.js",
            "line": 10,
            "description": "Set/get text",
            "itemtype": "property",
            "name": "text",
            "class": "nx.graphic.Text",
            "module": "nx.graphic"
        },
        {
            "file": "src/topology/topology/core/Categories.js",
            "line": 12,
            "description": "Show loading indicator",
            "itemtype": "method",
            "name": "showLoading",
            "class": "nx.graphic.Topology.Categories",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Categories.js",
            "line": 21,
            "description": "Hide loading indicator",
            "itemtype": "method",
            "name": "hideLoading",
            "class": "nx.graphic.Topology.Categories",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Config.js",
            "line": 11,
            "description": "Topology status, it could be  initializing/appended/ready",
            "itemtype": "property",
            "name": "status",
            "type": "String",
            "class": "nx.graphic.Topology.Config",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Config.js",
            "line": 21,
            "description": "topology's theme, it could be blue/green/dark/slate/yellow",
            "itemtype": "property",
            "name": "theme",
            "type": "String",
            "class": "nx.graphic.Topology.Config",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Config.js",
            "line": 39,
            "description": "Set the navigation visibility",
            "itemtype": "property",
            "name": "showNavigation",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Config",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Config.js",
            "line": 49,
            "description": "Get the setting panel component instance for extend user setting",
            "itemtype": "property",
            "name": "viewSettingPanel",
            "type": "nx.ui.Component",
            "readonly": "",
            "class": "nx.graphic.Topology.Config",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 22,
            "description": "Enabling gradual scaling feature when zooming, set to false will improve the performance",
            "itemtype": "property",
            "name": "enableGradualScaling",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 67,
            "description": "Fired when end zooming",
            "itemtype": "event",
            "name": "zoomend",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 77,
            "description": "Fired when zooming stage",
            "itemtype": "event",
            "name": "zooming",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "scale",
                    "description": "stage current scale",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 94,
            "description": "Fired when click the stage",
            "itemtype": "event",
            "name": "clickStage",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 103,
            "description": "Fired when mouse press stage, this is a capture event",
            "itemtype": "event",
            "name": "pressStage",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 112,
            "description": "Fired when start drag stage",
            "itemtype": "event",
            "name": "dragStageStart",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 121,
            "description": "Fired when dragging stage",
            "itemtype": "event",
            "name": "dragStage",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 130,
            "description": "Fired when drag end stage",
            "itemtype": "event",
            "name": "dragStageEnd",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 146,
            "description": "Fired when press up arrow key",
            "itemtype": "event",
            "name": "up",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 156,
            "description": "Fired when press down arrow key",
            "itemtype": "event",
            "name": "down",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 166,
            "description": "Fired when press left arrow key",
            "itemtype": "event",
            "name": "left",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 176,
            "description": "Fired when press right arrow key",
            "itemtype": "event",
            "name": "right",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 186,
            "description": "Fired when press enter key",
            "itemtype": "event",
            "name": "enter",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 196,
            "description": "Fired when press esc key",
            "itemtype": "event",
            "name": "esc",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 206,
            "description": "Fired when press a key",
            "itemtype": "event",
            "name": "pressA",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 215,
            "description": "Fired when press f key",
            "itemtype": "event",
            "name": "pressF",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 224,
            "description": "Fired when press m key",
            "itemtype": "event",
            "name": "pressM",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 233,
            "description": "Fired when press r key",
            "itemtype": "event",
            "name": "pressR",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 242,
            "description": "Fired when press s key",
            "itemtype": "event",
            "name": "pressS",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Event.js",
            "line": 252,
            "description": "Fired when press space key",
            "itemtype": "event",
            "name": "space",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Event",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 11,
            "description": "Identity the node and link mapping key, default is index",
            "itemtype": "property",
            "name": "identityKey",
            "type": "String",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 24,
            "description": "set/get the topology' data, data should follow Common Topology Data Definition",
            "itemtype": "property",
            "name": "data",
            "type": "JSON",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 39,
            "description": "Fired before start process data",
            "itemtype": "event",
            "name": "beforeSetData",
            "params": [
                {
                    "name": "sender",
                    "description": "Trigger instance",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "event object",
                    "type": "JSON"
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 54,
            "description": "Fired after process data",
            "itemtype": "event",
            "name": "afterSetData",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 73,
            "description": "Set the use force layout, recommand use dataProcessor:'force'",
            "itemtype": "property",
            "name": "autoLayout",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 108,
            "description": "Pre data processor, it could be 'force'/'quick'. It could also support register a new processor",
            "itemtype": "property",
            "name": "dataProcessor",
            "type": "String",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 121,
            "description": "Topology graph object",
            "itemtype": "property",
            "name": "graph",
            "type": "nx.data.ObservableGraph",
            "readonly": "",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 152,
            "description": "Vertex",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 177,
            "description": "Edge",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 203,
            "description": "EdgeSet",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 232,
            "description": "VertexSet",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 254,
            "description": "EdgeSetCollection",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 275,
            "description": "Data",
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 303,
            "description": "Set data to topology, recommend use topo.data(data)",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "data",
                    "description": "should be {nodes:[],links:[]}",
                    "type": "JSON"
                },
                {
                    "name": "callback",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 322,
            "description": "Insert data to topology",
            "itemtype": "method",
            "name": "insertData",
            "params": [
                {
                    "name": "data",
                    "description": "should be {nodes:[],links:[]}",
                    "type": "JSON"
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 332,
            "description": "Fired after insert data",
            "itemtype": "event",
            "name": "insertData",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 342,
            "description": "Get topology data, recommend use topo.data()",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "JSON"
            },
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Graph.js",
            "line": 372,
            "description": "Fired when all topology elements generated",
            "itemtype": "event",
            "name": "topologyGenerated",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Graph",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 10,
            "description": "Set/get topology's width.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 22,
            "description": "height Set/get topology's height.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 34,
            "description": "Set/get stage's padding.",
            "itemtype": "property",
            "name": "padding",
            "type": "Number",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 41,
            "description": "Set/get topology's scalability",
            "itemtype": "property",
            "name": "scalable",
            "type": "Boolean",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 59,
            "description": "Set to true will adapt to topology's outside container, set to ture will ignore width/height",
            "itemtype": "property",
            "name": "adaptive",
            "type": "Boolean",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 66,
            "description": "Get the topology's stage component",
            "itemtype": "property",
            "name": "stage",
            "type": "nx.graphic.Component",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 75,
            "description": "Enabling the smart node feature, set to false will improve the performance",
            "itemtype": "property",
            "name": "enableSmartNode",
            "type": "Boolean",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 105,
            "description": "Fired when topology appended to container with with& height",
            "itemtype": "event",
            "name": "ready",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 138,
            "description": "Make topology adapt to container,container should set width/height",
            "itemtype": "method",
            "name": "adaptToContainer",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 151,
            "description": "Get the passing bound's relative inside bound,if not passing param will return the topology graphic's bound",
            "params": [
                {
                    "name": "bound",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "}",
                "type": "Left: number, top: number, width: number, height: number"
            },
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 176,
            "description": "Make topology graphic fit stage",
            "itemtype": "method",
            "name": "fit",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 187,
            "description": "Fired when  after topology fit to stage",
            "itemtype": "event",
            "name": "fit",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 196,
            "description": "Zoom topology",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "zoom",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 204,
            "description": "Zoom topology by a bound",
            "itemtype": "method",
            "name": "zoomByBound",
            "params": [
                {
                    "name": "inBound",
                    "description": "e.g {left:Number,top:Number,width:Number,height:Number}",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback function",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "duration",
                    "description": "set the transition time, unit is second",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 220,
            "description": "Move topology",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "default is 0",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 231,
            "description": "Resize topology",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 257,
            "description": "Fired when topology's stage changed",
            "itemtype": "event",
            "name": "resizeStage",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/StageMixin.js",
            "line": 267,
            "description": "If enable enableSmartNode, this function will auto adjust the node's overlapping and set the nodes to right size",
            "itemtype": "method",
            "name": "adjustLayout",
            "class": "nx.graphic.Topology.StageMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/core/Topology.js",
            "line": 224,
            "description": "Clear all layer's content",
            "itemtype": "method",
            "name": "clear",
            "class": "nx.graphic.Topology",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupItem.js",
            "line": 16,
            "description": "Topology",
            "itemtype": "property",
            "name": "topology",
            "readyonly": "",
            "class": "nx.graphic.Topology.GroupItem",
            "module": "nx.graphic.Topology.Group"
        },
        {
            "file": "src/topology/topology/group/GroupItem.js",
            "line": 24,
            "description": "Node array in the shape",
            "itemtype": "property",
            "name": "nodes",
            "type": "Array",
            "class": "nx.graphic.Topology.GroupItem",
            "module": "nx.graphic.Topology.Group"
        },
        {
            "file": "src/topology/topology/group/GroupItem.js",
            "line": 70,
            "description": "Shape's color",
            "itemtype": "property",
            "name": "color",
            "class": "nx.graphic.Topology.GroupItem",
            "module": "nx.graphic.Topology.Group"
        },
        {
            "file": "src/topology/topology/group/GroupItem.js",
            "line": 77,
            "description": "Group's label",
            "itemtype": "property",
            "name": "label",
            "class": "nx.graphic.Topology.GroupItem",
            "module": "nx.graphic.Topology.Group"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 38,
            "description": "Default color table, with 5 colors",
            "itemtype": "property",
            "name": "colorTable",
            "static": 1,
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 48,
            "description": "Groups elements",
            "itemtype": "property",
            "name": "groupItems",
            "type": "nx.data.ObservableDictionary",
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 71,
            "description": "groups data",
            "itemtype": "property",
            "name": "groups",
            "type": "Array",
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 91,
            "description": "Register a group item class",
            "params": [
                {
                    "name": "name",
                    "description": "group items' name",
                    "type": "String"
                },
                {
                    "name": "className",
                    "description": "which should extend nx.graphic.Topology.GroupItem",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 111,
            "description": "Add a group to group layer",
            "params": [
                {
                    "name": "obj",
                    "description": "config of a group",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 163,
            "description": "Remove a group",
            "itemtype": "method",
            "name": "removeGroup",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 176,
            "description": "Get a group by id",
            "itemtype": "method",
            "name": "getGroup",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 185,
            "description": "Iterate all group",
            "itemtype": "method",
            "name": "eachGroupItem",
            "params": [
                {
                    "name": "callBack",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/group/GroupsLayer.js",
            "line": 196,
            "description": "clear all group",
            "clear": "",
            "class": "nx.graphic.Topology.GroupsLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 17,
            "description": "Get topology",
            "itemtype": "property",
            "name": "topology",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 34,
            "description": "Get fade status.",
            "itemtype": "property",
            "name": "fade",
            "readonly": "",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 55,
            "description": "Force layer fade.",
            "itemtype": "property",
            "name": "forceFade",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 107,
            "description": "Factory function, draw group",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 113,
            "description": "Show layer",
            "itemtype": "method",
            "name": "show",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 120,
            "description": "Hide layer",
            "itemtype": "method",
            "name": "hide",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 127,
            "description": "fade out layer",
            "itemtype": "method",
            "name": "fadeOut",
            "params": [
                {
                    "name": "force",
                    "description": "force layer fade out and can't fade in",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "callback after fade out",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 141,
            "description": "FadeIn layer's fade statues",
            "params": [
                {
                    "name": "force",
                    "description": "force recover all items",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "callback after fade out",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 157,
            "description": "Fade in layer",
            "itemtype": "method",
            "name": "fadeIn",
            "params": [
                {
                    "name": "force",
                    "description": "force recover all items",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "callback after fade out",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/Layer.js",
            "line": 167,
            "description": "clear layer's content",
            "itemtype": "method",
            "name": "clear",
            "class": "nx.graphic.Topology.Layer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 5,
            "itemtype": "property",
            "name": "layersMap",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 13,
            "itemtype": "property",
            "name": "layers",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 22,
            "description": "Get fade status.",
            "itemtype": "property",
            "name": "fade",
            "readonly": "",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 34,
            "description": "Set active priority over highlight.",
            "itemtype": "property",
            "name": "fadeActivePriority",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 59,
            "description": "Force layer fade.",
            "itemtype": "property",
            "name": "forceFade",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 82,
            "description": "To generate a layer",
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "layer",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 121,
            "description": "Get a layer reference by name",
            "itemtype": "method",
            "name": "getLayer",
            "params": [
                {
                    "name": "name",
                    "description": "The name you pass to topology when you attacherLayer/prependLayer/insertLayerAfter",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Instance of a layer",
                "type": "*"
            },
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 134,
            "description": "attach a layer to topology, that should be subclass of nx.graphic.Topology.Layer",
            "itemtype": "method",
            "name": "attachLayer",
            "params": [
                {
                    "name": "name",
                    "description": "handler to get this layer",
                    "type": "String"
                },
                {
                    "name": "layer",
                    "description": "<String,nx.graphic.Topology.Layer> Could be string of a layer's class name, or a reference of a layer"
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 170,
            "description": "Prepend a layer to topology, that should be subclass of nx.graphic.Topology.Layer",
            "itemtype": "method",
            "name": "prependLayer",
            "params": [
                {
                    "name": "name",
                    "description": "handler to get this layer",
                    "type": "String"
                },
                {
                    "name": "layer",
                    "description": "<String,nx.graphic.Topology.Layer> Could be string of a layer's class name, or a reference of a layer"
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 179,
            "description": "Insert a layer under a certain layer, that should be subclass of nx.graphic.Topology.Layer",
            "itemtype": "method",
            "name": "insertLayerAfter",
            "params": [
                {
                    "name": "name",
                    "description": "handler to get this layer",
                    "type": "String"
                },
                {
                    "name": "layer",
                    "description": "<String,Object> Could be string of a layer's class name, or a reference of a layer"
                },
                {
                    "name": "upsideLayerName",
                    "description": "name of upside layer",
                    "type": "String"
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 199,
            "description": "fade out layer",
            "itemtype": "method",
            "name": "fadeOut",
            "params": [
                {
                    "name": "force",
                    "description": "force layer fade out and can't fade in",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "callback after fade out",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layer/LayerMixin.js",
            "line": 213,
            "description": "FadeIn layer's fade statues",
            "params": [
                {
                    "name": "force",
                    "description": "force recover all items",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "callback after fade out",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 21,
            "description": "Layout map",
            "itemtype": "property",
            "name": "layoutMap",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 30,
            "description": "Current layout type",
            "itemtype": "property",
            "name": "layoutType",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 37,
            "description": "Current layout config",
            "itemtype": "property",
            "name": "layoutConfig",
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 67,
            "description": "Register a layout",
            "itemtype": "method",
            "name": "registerLayout",
            "params": [
                {
                    "name": "name",
                    "description": "layout name",
                    "type": "String"
                },
                {
                    "name": "cls",
                    "description": "layout class instance",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 81,
            "description": "Get layout instance by name",
            "itemtype": "method",
            "name": "getLayout",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/LayoutMixin.js",
            "line": 91,
            "description": "Activate a layout",
            "params": [
                {
                    "name": "inName",
                    "description": "layout name",
                    "type": "String"
                },
                {
                    "name": "inConfig",
                    "description": "layout config object",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback for after apply a layout",
                    "type": "Function"
                }
            ],
            "class": "nx.graphic.Topology.LayoutMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/USMapLayout.js",
            "line": 45,
            "description": "Map's longitude attribute",
            "itemtype": "property",
            "name": "longitude",
            "class": "nx.graphic.Topology.USMapLayout",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/USMapLayout.js",
            "line": 49,
            "description": "Map's latitude attribute",
            "itemtype": "property",
            "name": "latitude",
            "class": "nx.graphic.Topology.USMapLayout",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/WorldMapLayout.js",
            "line": 40,
            "description": "Map's longitude attribute",
            "itemtype": "property",
            "name": "longitude",
            "class": "nx.graphic.Topology.WorldMapLayout",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/WorldMapLayout.js",
            "line": 44,
            "description": "Map's latitude attribute",
            "itemtype": "property",
            "name": "latitude",
            "class": "nx.graphic.Topology.WorldMapLayout",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/layout/WorldMapLayout.js",
            "line": 48,
            "description": "world topo json file url, this should be under the same domain.\nCould download from here : http://bl.ocks.org/mbostock/raw/4090846/world-50m.json",
            "itemtype": "property",
            "name": "worldTopoJson",
            "class": "nx.graphic.Topology.WorldMapLayout",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 14,
            "description": "Get source node's instance",
            "itemtype": "property",
            "name": "sourceNode",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 25,
            "description": "Get target node's instance",
            "itemtype": "property",
            "name": "targetNode",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 36,
            "description": "Get source node's position",
            "itemtype": "property",
            "name": "sourcePosition",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 45,
            "description": "Get target node's position",
            "itemtype": "property",
            "name": "targetPosition",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 54,
            "description": "Get source node's id",
            "itemtype": "property",
            "name": "sourceNodeID",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 63,
            "description": "Get target node's id",
            "itemtype": "property",
            "name": "targetNodeID",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 72,
            "description": "Get source node's x position",
            "itemtype": "property",
            "name": "sourceX",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 81,
            "description": "Get source node's y position",
            "itemtype": "property",
            "name": "sourceY",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 90,
            "description": "Get target node's x position",
            "itemtype": "property",
            "name": "targetX",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 99,
            "description": "Get target node's x position",
            "itemtype": "property",
            "name": "targetY",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 108,
            "description": "Get source node's vector",
            "itemtype": "property",
            "name": "sourceVector",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 117,
            "description": "Get target node's vector",
            "itemtype": "property",
            "name": "targetVector",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 140,
            "description": "Get link's line object",
            "itemtype": "property",
            "name": "line",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 149,
            "description": "Get topology instance",
            "itemtype": "property",
            "name": "topology",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 156,
            "description": "Get link's id",
            "itemtype": "property",
            "name": "id",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 165,
            "description": "Get link's linkKey",
            "itemtype": "property",
            "name": "linkKey",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 174,
            "description": "Get is link is reverse link",
            "itemtype": "property",
            "name": "reverse",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 183,
            "description": "Get this center point's position",
            "itemtype": "property",
            "name": "centerPoint",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 192,
            "description": "Get/set link's usability",
            "itemtype": "property",
            "name": "enable",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 202,
            "description": "Factory function , will be call when set model",
            "itemtype": "method",
            "name": "setModel",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/AbstractLink.js",
            "line": 243,
            "description": "Factory function , will be call when relate data updated",
            "itemtype": "method",
            "name": "update",
            "class": "nx.graphic.Topology.AbstractLink",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 16,
            "description": "Get link type 'curve' / 'parallel'",
            "itemtype": "property",
            "name": "linkType",
            "type": "String",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 34,
            "description": "Get/set link's offset percentage",
            "itemtype": "property",
            "name": "offset",
            "type": "Float",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 41,
            "description": "Get/set link's offset step",
            "itemtype": "property",
            "name": "offsetRadix",
            "type": "Number",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 48,
            "description": "Get/set link's label, it is shown at the center point",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 64,
            "description": "Set/get link's color",
            "itemtype": "property",
            "name": "color",
            "type": "Color",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 76,
            "description": "Set/get link's width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 99,
            "description": "Set/get is link dotted",
            "itemtype": "property",
            "name": "dotted",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 114,
            "description": "Set link's style",
            "itemtype": "property",
            "name": "style",
            "type": "Object",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 125,
            "description": "Get link's parent linkSet",
            "itemtype": "property",
            "name": "parentLinkSet",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 152,
            "description": "Set/get link's usability",
            "itemtype": "property",
            "name": "enable",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 167,
            "description": "Set the link's draw function, after set this property please call update function",
            "itemtype": "property",
            "name": "drawMethod",
            "type": "Function",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 227,
            "description": "Update link's path",
            "itemtype": "method",
            "name": "update",
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 290,
            "description": "Get link's padding Line",
            "itemtype": "method",
            "name": "getPaddingLine",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 305,
            "description": "Get calculated offset number",
            "itemtype": "method",
            "name": "getoffset",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 332,
            "description": "Fired when mouse down on link",
            "itemtype": "event",
            "name": "pressLink",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 343,
            "description": "Fired when click link",
            "itemtype": "event",
            "name": "clickLink",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 354,
            "description": "Fired when mouse leave link",
            "itemtype": "event",
            "name": "leaveLink",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/Link.js",
            "line": 365,
            "description": "Fired when mouse enter link",
            "itemtype": "event",
            "name": "enterLink",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Link",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 11,
            "description": "Link instance class name, support function",
            "itemtype": "property",
            "name": "nodeInstanceClass",
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 18,
            "description": "LinkSet instance class name, support function",
            "itemtype": "property",
            "name": "linkSetInstanceClass",
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 25,
            "description": "Is topology support Multiple link , is false will highly improve performance",
            "itemtype": "property",
            "name": "supportMultipleLink",
            "type": "Boolean",
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 32,
            "description": "All link's config. key is link's property, support super binding\nvalue could be a single string eg: color:'#f00'\nvalue could be a an expression eg: label :'{model.id}'\nvalue could be a function eg iconType : function (model,instance){ return  'router'}\nvalue could be a normal binding expression eg : label :'{#label}'",
            "itemtype": "property",
            "name": "",
            "type": "LinkConfig",
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 41,
            "description": "All linkSet's config. key is link's property, support super binding\nvalue could be a single string eg: color:'#f00'\nvalue could be a an expression eg: label :'{model.id}'\nvalue could be a function eg iconType : function (model,instance){ return  'router'}\nvalue could be a normal binding expression eg : label :'{#label}'",
            "itemtype": "property",
            "name": "",
            "type": "LinkSetConfig",
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 53,
            "description": "Add a link to topology",
            "itemtype": "method",
            "name": "addLink",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "JSON"
                },
                {
                    "name": "inOption",
                    "description": "",
                    "type": "Config"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.graphic.Topology.Link"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 74,
            "description": "Remove a link",
            "itemtype": "method",
            "name": "removeLink",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 94,
            "description": "Traverse each link",
            "itemtype": "method",
            "name": "eachLink",
            "params": [
                {
                    "name": "callback",
                    "description": "<Function>"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 104,
            "description": "Get link by link id",
            "itemtype": "method",
            "name": "getLink",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 113,
            "description": "get linkSet by node",
            "params": [
                {
                    "name": "sourceVertexID",
                    "description": "source node's id",
                    "type": "String"
                },
                {
                    "name": "targetVertexID",
                    "description": "target node's id",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.graphic.Topology.LinkSet"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 122,
            "description": "Get linkSet by linkKey",
            "params": [
                {
                    "name": "linkKey",
                    "description": "linkKey",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.graphic.Topology.LinkSet"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkMixin.js",
            "line": 130,
            "description": "Get links by node",
            "params": [
                {
                    "name": "sourceVertexID",
                    "description": "source node's id",
                    "type": "String"
                },
                {
                    "name": "targetVertexID",
                    "description": "target node's id",
                    "type": "String"
                }
            ],
            "return": {
                "description": "links collection",
                "type": "Array"
            },
            "class": "nx.graphic.Topology.LinkMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 17,
            "description": "Get link type 'curve' / 'parallel'",
            "itemtype": "property",
            "name": "linkType",
            "type": "String",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 35,
            "description": "Sub links collection",
            "itemtype": "property",
            "name": "links",
            "readonly": "",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 49,
            "description": "LinkSet's color",
            "itemtype": "property",
            "name": "color",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 70,
            "description": "Set/get link's usability",
            "itemtype": "property",
            "name": "enable",
            "type": "Boolean",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 87,
            "description": "Collapsed statues",
            "itemtype": "property",
            "name": "collapsed",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 170,
            "description": "Update linkSet",
            "itemtype": "property",
            "name": "updateLinkSet",
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 183,
            "description": "Fired when collapse linkSet",
            "itemtype": "event",
            "name": "collapseLinkSet",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 194,
            "description": "Fired when expend linkSet",
            "itemtype": "event",
            "name": "expandLinkSet",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 203,
            "description": "Iterate all sub links",
            "itemtype": "method",
            "name": "eachLink",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 283,
            "description": "Fired when press number element",
            "itemtype": "event",
            "name": "pressLinkSetNumber",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 294,
            "description": "Fired when click number element",
            "itemtype": "event",
            "name": "clickLinkSetNumber",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 305,
            "description": "Fired when mouse leave number element",
            "itemtype": "event",
            "name": "numberleave",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSet.js",
            "line": 316,
            "description": "Fired when mouse enter number element",
            "itemtype": "event",
            "name": "numberenter",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinkSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 5,
            "description": "Could use topo.getLayer('linkSet') get this\n* @class nx.graphic.Topology.LinksLayer\n* @extend nx.graphic.Topology.Layer",
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 177,
            "description": "Iterate all linkSet",
            "itemtype": "method",
            "name": "eachLinkSet",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 188,
            "description": "Get linkSet by source node id and target node id",
            "itemtype": "method",
            "name": "getLinkSet",
            "params": [
                {
                    "name": "sourceVertexID",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "targetVertexID",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.graphic.LinkSet"
            },
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 205,
            "description": "Get linkSet by linkKey",
            "itemtype": "method",
            "name": "getLinkSetByLinkKey",
            "params": [
                {
                    "name": "linkKey",
                    "description": "linkKey",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.graphic.Topology.LinkSet"
            },
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 214,
            "description": "Highlight linkSet",
            "itemtype": "method",
            "name": "highlightlinkSets",
            "params": [
                {
                    "name": "linkSets",
                    "description": "linkSet array",
                    "type": "Array"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 222,
            "description": "Active linkSet",
            "itemtype": "method",
            "name": "highlightlinkSets",
            "params": [
                {
                    "name": "linkSets",
                    "description": "linkSet array",
                    "type": "Array"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinkSetLayer.js",
            "line": 230,
            "description": "Clear links layer",
            "itemtype": "method",
            "name": "clear",
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 55,
            "description": "Add a link",
            "params": [
                {
                    "name": "edge",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "addLink",
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 67,
            "description": "Remove a link",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 79,
            "description": "Update link",
            "itemtype": "method",
            "name": "updateLink",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 167,
            "description": "Traverse all links",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "eachLink",
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 178,
            "description": "Get link by id",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 186,
            "description": "Highlight links",
            "itemtype": "method",
            "name": "highlightLinks",
            "params": [
                {
                    "name": "links",
                    "description": "links array",
                    "type": "Array"
                }
            ],
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/link/LinksLayer.js",
            "line": 197,
            "description": "Clear links layer",
            "itemtype": "method",
            "name": "clear",
            "class": "nx.graphic.Topology.LinksLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 13,
            "description": "Get  node's absolute position",
            "itemtype": "property",
            "name": "position",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 85,
            "description": "Get  node's vector",
            "itemtype": "property",
            "name": "vector",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 95,
            "description": "Get/set  node's x position, suggest use position",
            "itemtype": "property",
            "name": "x",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 108,
            "description": "Get/set  node's y position, suggest use position",
            "itemtype": "property",
            "name": "y",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 121,
            "description": "Lock x axle, node only can move at y axle",
            "itemtype": "property",
            "name": "lockXAxle",
            "type": "Boolean",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 128,
            "description": "Lock y axle, node only can move at x axle",
            "itemtype": "property",
            "name": "lockYAxle",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 135,
            "description": "Get topology stage scale",
            "itemtype": "property",
            "name": "scale",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 144,
            "description": "Get topology instance",
            "itemtype": "property",
            "name": "topology",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 149,
            "description": "Get node's id",
            "itemtype": "property",
            "name": "id",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 158,
            "description": "Node is been selected statues",
            "itemtype": "property",
            "name": "selected",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 165,
            "description": "Get/set node's usablity",
            "itemtype": "property",
            "name": "enable",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 172,
            "description": "Get node self reference",
            "itemtype": "property",
            "name": "node",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 219,
            "description": "Fired when node been selected or cancel selected",
            "itemtype": "event",
            "name": "selectNode",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 228,
            "description": "Factory function , will be call when set model",
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 238,
            "description": "Fired when node update coordinate",
            "itemtype": "event",
            "name": "updateNodeCoordinate",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 257,
            "description": "Move node certain distance",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 267,
            "description": "Move to a position",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "isAnimated",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 290,
            "description": "Use css translate to move node for high performance, when use this method, related link can't recive notification. Could hide links during transition.",
            "itemtype": "method",
            "name": "translateTo",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 300,
            "description": "Iterate  all connected links to this node",
            "itemtype": "method",
            "name": "eachLink",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/AbstractNode.js",
            "line": 332,
            "description": "Iterate all connected node",
            "itemtype": "method",
            "name": "eachConnectedNode",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.AbstractNode",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 11,
            "description": "Get node's label",
            "itemtype": "property",
            "name": "label",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 26,
            "description": "Node icon's type",
            "itemtype": "method",
            "name": "iconType",
            "type": "String",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 46,
            "description": "Show/hide node's icon",
            "itemtype": "property",
            "name": "showIcon",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 71,
            "description": "Set node's label visible",
            "itemtype": "property",
            "name": "labelVisibility  true",
            "type": "Boolean",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 110,
            "description": "Set the node's color",
            "itemtype": "property",
            "name": "color",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 124,
            "description": "Set node's scale",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 147,
            "description": "Get/set node's selected statues",
            "itemtype": "property",
            "name": "selected",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 275,
            "description": "Get node bound",
            "params": [
                {
                    "name": "onlyGraphic",
                    "description": "is is TRUE, will only get graphic's bound",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 298,
            "description": "Fired when click a node",
            "itemtype": "event",
            "name": "clickNode",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 311,
            "description": "Fired when mouse enter a node",
            "itemtype": "event",
            "name": "enterNode",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 327,
            "description": "Fired when mouse leave a node",
            "itemtype": "event",
            "name": "leaveNode",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 342,
            "description": "Fired when start drag a node",
            "itemtype": "event",
            "name": "dragNodeStart",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 354,
            "description": "Fired when drag a node",
            "itemtype": "event",
            "name": "dragNode",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 367,
            "description": "Fired when finish a node",
            "itemtype": "event",
            "name": "dragNodeEnd",
            "params": [
                {
                    "name": "sender",
                    "description": "trigger instance",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "original event object",
                    "type": "Object"
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 384,
            "description": "Set label to a node",
            "itemtype": "method",
            "name": "calcLabelPosition",
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/Node.js",
            "line": 477,
            "itemtype": "method",
            "name": "updateByMaxObtuseAngle",
            "params": [
                {
                    "name": "angle",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.Node",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 14,
            "description": "Node instance class name, support function",
            "itemtype": "property",
            "name": "nodeInstanceClass",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 21,
            "description": "NodeSet instance class name, support function",
            "itemtype": "property",
            "name": "nodeSetInstanceClass",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 28,
            "description": "Set node's draggable",
            "itemtype": "property",
            "name": "nodeDraggable",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 35,
            "description": "Enable smart label",
            "itemtype": "property",
            "name": "enableSmartLabel",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 42,
            "description": "Show or hide node's icon",
            "itemtype": "property",
            "name": "showIcon",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 64,
            "description": "All node's config. key is node's property, support super binding\nvalue could be a single string eg: color:'#f00'\nvalue could be a an expression eg: label :'{model.id}'\nvalue could be a function eg iconType : function (model,instance){ return  'router'}\nvalue could be a normal binding expression eg : label :'{#label}'",
            "itemtype": "property",
            "name": "",
            "type": "NodeConfig",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 73,
            "description": "All nodeSet's config. key is node's property, support super binding\nvalue could be a single string eg: color:'#f00'\nvalue could be a an expression eg: label :'{model.id}'\nvalue could be a function eg iconType : function (model,instance){ return  'router'}\nvalue could be a normal binding expression eg : label :'{#label}'",
            "itemtype": "property",
            "name": "",
            "type": "NodeSetConfig",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 82,
            "description": "All selected nodes, could direct add/remove nodes to this collection",
            "itemtype": "property",
            "name": "selectedNodes",
            "type": "nx.data.ObservableCollection",
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 172,
            "description": "Add a node to topology",
            "itemtype": "method",
            "name": "addNode",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "inOption",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 191,
            "description": "Remove a node",
            "itemtype": "method",
            "name": "removeNode",
            "params": [
                {
                    "name": "arg",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 326,
            "description": "Add a nodeSet",
            "itemtype": "method",
            "name": "addNodeSet",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "inOption",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "parentNodeSet",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 388,
            "description": "Traverse each node",
            "itemtype": "method",
            "name": "eachNode",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 398,
            "description": "Get node by node id",
            "itemtype": "method",
            "name": "getNode",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 407,
            "description": "Get all visible nodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 420,
            "description": "Register a customize icon",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "URL"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 449,
            "description": "Batch action, highlight node and related nodes and connected links.",
            "params": [
                {
                    "name": "inNode",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 497,
            "description": "Batch action, highlight node and related nodes and connected links.",
            "params": [
                {
                    "name": "inNode",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 546,
            "description": "Zoom topology to let the passing nodes just visible at the screen",
            "itemtype": "method",
            "name": "zoomByNodes",
            "params": [
                {
                    "name": "callback",
                    "description": "callback function",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "context",
                    "description": "callback context",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "nodes",
                    "description": "nodes collection",
                    "type": "Array"
                }
            ],
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeMixin.js",
            "line": 643,
            "description": "Get the bound of passing node's",
            "params": [
                {
                    "name": "inNodes",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "isNotIncludeLabel",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "nx.graphic.Topology.NodeMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeSet.js",
            "line": 13,
            "description": "Get all sub nodes",
            "class": "nx.graphic.Topology.NodeSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeSet.js",
            "line": 58,
            "description": "Collapsed statues",
            "itemtype": "property",
            "name": "collapsed",
            "class": "nx.graphic.Topology.NodeSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeSet.js",
            "line": 84,
            "description": "Show/hide node's icon",
            "itemtype": "property",
            "name": "showIcon",
            "class": "nx.graphic.Topology.NodeSet",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeSetLayer.js",
            "line": 145,
            "description": "Get node by id",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "itemtype": "method",
            "name": "getNodeSet",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodeSetLayer.js",
            "line": 154,
            "description": "Iterate all nodeSet",
            "itemtype": "method",
            "name": "eachNode",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 16,
            "description": "Get all nodes instance",
            "itemtype": "property",
            "name": "nodes",
            "type": "Array",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 25,
            "description": "Get all nodes instance map",
            "itemtype": "property",
            "name": "nodesMap",
            "type": "Object",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 34,
            "description": "Nodes observable dictionary",
            "itemtype": "property",
            "name": "nodeDictionary",
            "type": "nx.data.ObservableDictionary",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 61,
            "description": "Add node a nodes layer",
            "params": [
                {
                    "name": "vertex",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "addNode",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 73,
            "description": "Remove node",
            "itemtype": "method",
            "name": "removeNode",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 171,
            "description": "Iterate all nodes",
            "itemtype": "method",
            "name": "eachNode",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/node/NodesLayer.js",
            "line": 182,
            "description": "Get node by id",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "itemtype": "method",
            "name": "getNode",
            "class": "nx.graphic.Topology.NodesLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 24,
            "description": "get/set links's style ,default value is\n            value: {\n                   'stroke': '#666',\n                   'stroke-width': '1px'\n               }",
            "itemtype": "property",
            "name": "pathStyle",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 39,
            "description": "Get/set a path's width",
            "itemtype": "property",
            "name": "pathWidth",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 46,
            "description": "Get/set a path's offset",
            "itemtype": "property",
            "name": "pathGutter",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 53,
            "description": "Get/set a path's padding to a node",
            "itemtype": "property",
            "name": "pathPadding",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 60,
            "description": "Get/set path arrow type , 'none'/'cap'/'full'/'end'",
            "itemtype": "property",
            "name": "",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 67,
            "description": "Get/set links to draw a path pver it",
            "itemtype": "property",
            "name": "links",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 165,
            "description": "Reverse path direction",
            "itemtype": "property",
            "name": "reverse",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/Path.js",
            "line": 188,
            "description": "Draw a path,internal",
            "itemtype": "method",
            "name": "draw",
            "class": "nx.graphic.Topology.Path",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/PathLayer.js",
            "line": 13,
            "description": "Path array",
            "itemtype": "property",
            "name": "paths",
            "class": "nx.graphic.Topology.PathLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/PathLayer.js",
            "line": 36,
            "description": "Add a path to topology",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "nx.graphic.Topology.Path"
                }
            ],
            "itemtype": "method",
            "name": "addPath",
            "class": "nx.graphic.Topology.PathLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/path/PathLayer.js",
            "line": 47,
            "description": "Remove a path",
            "itemtype": "method",
            "name": "removePath",
            "params": [
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.PathLayer",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/DefaultScene.js",
            "line": 11,
            "description": "active scene",
            "itemtype": "method",
            "name": "activate",
            "class": "nx.graphic.Topology.DefaultScene",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/Scene.js",
            "line": 18,
            "description": "Factory function ,entry of a scene",
            "itemtype": "method",
            "name": "activate",
            "class": "nx.graphic.Topology.Scene",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/Scene.js",
            "line": 25,
            "description": "Deactivate a scene",
            "itemtype": "method",
            "name": "deactivate",
            "class": "nx.graphic.Topology.Scene",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 11,
            "itemtype": "property",
            "name": "scenesMap",
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 19,
            "itemtype": "property",
            "name": "scenes",
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 28,
            "description": "Current scene name",
            "itemtype": "property",
            "name": "currentSceneName",
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 46,
            "description": "Register a scene to topology",
            "itemtype": "method",
            "name": "registerScene",
            "params": [
                {
                    "name": "name",
                    "description": "for reference to a certain scene",
                    "type": "String"
                },
                {
                    "name": "inClass",
                    "description": "<String,Class> A scene class name or a scene class instance, which is subclass of nx.graphic.Topology.Scene"
                }
            ],
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 75,
            "description": "Activate a scene, topology only has one active scene.",
            "itemtype": "method",
            "name": "activateScene",
            "params": [
                {
                    "name": "name",
                    "description": "Scene name which be passed at registerScene",
                    "type": "String"
                }
            ],
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SceneMixin.js",
            "line": 96,
            "description": "Deactivate a certain scene",
            "itemtype": "method",
            "name": "deactivateScene",
            "class": "nx.graphic.Topology.SceneMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SelectionNodeScene.js",
            "line": 11,
            "description": "Get all selected nodes",
            "itemtype": "property",
            "name": "selectedNodes",
            "class": "nx.graphic.Topology.SelectionNodeScene",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/scene/SelectionScene.js",
            "line": 11,
            "description": "Entry",
            "itemtype": "method",
            "name": "activate",
            "class": "nx.graphic.Topology.SelectionScene",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 13,
            "description": "Get topology",
            "itemtype": "property",
            "name": "topology",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 20,
            "description": "All tooltip's instance array",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 28,
            "description": "Get node's tooltip",
            "itemtype": "property",
            "name": "nodeTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 33,
            "description": "Get link's tooltip",
            "itemtype": "property",
            "name": "linkTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 38,
            "description": "Get linkSet tooltip",
            "itemtype": "method",
            "name": "linkSetTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 45,
            "description": "node tooltip class",
            "itemtype": "property",
            "name": "nodeTooltipClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 53,
            "description": "link tooltip class",
            "itemtype": "property",
            "name": "linkTooltipClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 60,
            "description": "linkSet tooltip class",
            "itemtype": "property",
            "name": "linkSetTooltipClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 70,
            "itemtype": "property",
            "name": "nodeTooltipContentClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 76,
            "itemtype": "property",
            "name": "linkTooltipContentClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 82,
            "itemtype": "property",
            "name": "linkSetTooltipContentClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 92,
            "description": "Show/hide node's tooltip",
            "type": "Boolean",
            "itemtype": "property",
            "name": "showNodeTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 100,
            "description": "Show/hide link's tooltip",
            "type": "Boolean",
            "itemtype": "property",
            "name": "showLinkTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 108,
            "description": "Show/hide linkSet's tooltip",
            "type": "Boolean",
            "itemtype": "property",
            "name": "showLinkSetTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 119,
            "description": "Tooltip policy class",
            "itemtype": "property",
            "name": "tooltipPolicyClass",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 154,
            "description": "Set/get tooltip's activate statues",
            "itemtype": "property",
            "name": "activated",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 231,
            "description": "Register tooltip class",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "tooltipClass",
                    "description": "",
                    "type": "nx.ui.Component"
                }
            ],
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 252,
            "description": "Get tooltip instance by name",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "nx.ui.Component"
            },
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 270,
            "description": "Open a node's tooltip",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "nx.graphic.Topology.Node"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "openNodeTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 314,
            "description": "Open a nodeSet's tooltip",
            "params": [
                {
                    "name": "nodeSet",
                    "description": "",
                    "type": "nx.graphic.Topology.NodeSet"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "openNodeSetTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 358,
            "description": "open a link's tooltip",
            "params": [
                {
                    "name": "link",
                    "description": ""
                },
                {
                    "name": "position",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "openLinkTooltip",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 399,
            "description": "Open linkSet tooltip",
            "itemtype": "method",
            "name": "openLinkSetTooltip",
            "params": [
                {
                    "name": "linkSet",
                    "description": ""
                },
                {
                    "name": "position",
                    "description": ""
                }
            ],
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipManager.js",
            "line": 440,
            "description": "Close all tooltip",
            "itemtype": "method",
            "name": "closeAll",
            "class": "nx.graphic.Topology.TooltipManager",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipMixin.js",
            "line": 12,
            "description": "Set/get the tooltip manager config",
            "itemtype": "property",
            "name": "tooltipManagerConfig",
            "class": "nx.graphic.Topology.TooltipMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TooltipMixin.js",
            "line": 28,
            "description": "get tooltip manager",
            "itemtype": "property",
            "name": "tooltipManager",
            "class": "nx.graphic.Topology.TooltipMixin",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TopologyTooltip.js",
            "line": 9,
            "description": "Lazy closing a tooltip",
            "type": "Boolean",
            "itemtype": "property",
            "name": "lazyClose",
            "class": "nx.graphic.Topology.Tooltip",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TopologyTooltip.js",
            "line": 17,
            "description": "Pin a tooltip",
            "type": "Boolean",
            "itemtype": "property",
            "name": "pin",
            "class": "nx.graphic.Topology.Tooltip",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/topology/tooltip/TopologyTooltip.js",
            "line": 25,
            "description": "Is tooltip response to resize event",
            "type": "Boolean",
            "itemtype": "property",
            "name": "listenWindow",
            "class": "nx.graphic.Topology.Tooltip",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popover.js",
            "line": 10,
            "description": "Popover's title",
            "class": "nx.ui.Popover",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 24,
            "itemtype": "property",
            "name": "target",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 30,
            "description": "[bottom,top,left,right]",
            "itemtype": "property",
            "name": "direction",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 37,
            "itemtype": "property",
            "name": "width",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 43,
            "itemtype": "property",
            "name": "height",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 49,
            "itemtype": "property",
            "name": "offset",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 55,
            "itemtype": "property",
            "name": "offsetX",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 61,
            "itemtype": "property",
            "name": "offsetY",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 67,
            "itemtype": "property",
            "name": "align",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 73,
            "itemtype": "property",
            "name": "position",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 79,
            "itemtype": "property",
            "name": "location",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 85,
            "itemtype": "property",
            "name": "listenResize",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 91,
            "itemtype": "property",
            "name": "lazyClose",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 97,
            "itemtype": "property",
            "name": "pin",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 103,
            "itemtype": "property",
            "name": "registeredPositionMap",
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 135,
            "description": "Open popup",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "args",
                    "description": "config",
                    "type": "Object"
                }
            ],
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/ui/Popup.js",
            "line": 336,
            "description": "close popup",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "force",
                    "description": ""
                }
            ],
            "class": "nx.ui.Popup",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/util/Animation.js",
            "line": 2,
            "link": "http://dev.chromium.org/developers/design-documents/requestanimationframe-implementation",
            "class": "",
            "module": "nx.graphic.Topology"
        },
        {
            "file": "src/topology/util/query.js",
            "line": 139,
            "doctype": "MarkDown\noptions:\n- options.array [any*]\n  - the target array\n- options.select: function(any){return boolean;}\n  - *optional*\n  - pre-filter of the array\n- options.aggregate: {grouper:grouper,aggregater:aggregater} or [proplist, aggregater] or [prop, prop, ..., aggregater]\n  - *optional*\n  - proplist: \"prop,prop,...\"\n  - prop: property name on array items\n  - grouper: map an array item into a string key\n  - aggregater: function(mapped){return aggregated}\n- options.mapping: function(item){return newitem}\n  - *optional*\n- options.orderby: proplist or [prop, prop, ...]\n  - *optional*",
            "class": "",
            "module": "nx.graphic.Topology"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/core/Component.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/core/Component.js:237"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/core/DragManager.js:2"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/core/DragManager.js:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/processor/Force.js:9"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/processor/NeXtForce.js:9"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Convex.js:16"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/Edge.js:4"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edge.js:135"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/EdgeSet.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/EdgeSetCollection.js:2"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/EdgeSets.js:119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edges.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edges.js:273"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edges.js:284"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edges.js:301"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Edges.js:328"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:38"
        },
        {
            "message": "unknown tag: methid",
            "line": " src/topology/data/Line.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:56"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:63"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:70"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:128"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:135"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Line.js:153"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/ObservableGraph.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/ObservableGraph.js:179"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/ObservableGraph.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/ObservableGraph.js:250"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/Vertex.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Vertex.js:306"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/data/VertexSet.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/VertexSet.js:189"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/VertexSets.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/VertexSets.js:198"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Vertices.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Vertices.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/data/Vertices.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:16"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:23"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:30"
        },
        {
            "message": "unknown tag: methid",
            "line": " src/topology/geometry/Line.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:135"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Line.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:87"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:167"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:188"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:195"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:203"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/geometry/Vector.js:211"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Arc.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/BezierCurves.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Circle.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Group.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/ICON.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/svg/Icons.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/svg/Icons.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/svg/Icons.js:37"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Image.js:5"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Line.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Path.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Polygon.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Rect.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Stage.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/svg/Stage.js:196"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Text.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/svg/Triangle.js:2"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/core/Graph.js:342"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/core/StageMixin.js:151"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/core/Topology.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/CircleGroup.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/GroupItem.js:3"
        },
        {
            "message": "unknown tag: readyonly",
            "line": " src/topology/topology/group/GroupItem.js:16"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/GroupsLayer.js:16"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/group/GroupsLayer.js:176"
        },
        {
            "message": "unknown tag: clear",
            "line": " src/topology/topology/group/GroupsLayer.js:196"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/NodeSetPolygonGroup.js:4"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/PolygonGroup.js:4"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/group/RectGroup.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/layer/Layer.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/layer/LayerMixin.js:82"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/layer/LayerMixin.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/layout/LayoutMixin.js:81"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/link/AbstractLink.js:5"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/link/Link.js:4"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/Link.js:290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/Link.js:305"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkMixin.js:130"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/link/LinkSet.js:6"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkSetLayer.js:188"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinkSetLayer.js:205"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/link/LinksLayer.js:4"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/link/LinksLayer.js:178"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/node/AbstractNode.js:4"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/node/Node.js:2"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/Node.js:275"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:172"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:326"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:398"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:407"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeMixin.js:643"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/node/NodeSet.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodeSetLayer.js:145"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/node/NodesLayer.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/node/NodesLayer.js:182"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/path/Path.js:7"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/path/PathLayer.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/plugin/3D.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/plugin/Route.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/plugin/Thumbnail.js:4"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/scene/DefaultScene.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/scene/Scene.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/scene/SelectionNodeScene.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/scene/SelectionScene.js:4"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/scene/ZoomBySelection.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/tooltip/LinkSetTooltip.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/tooltip/LinkTooltip.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/tooltip/NodeTooltip.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/tooltip/TooltipManager.js:4"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/topology/topology/tooltip/TooltipManager.js:252"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/topology/tooltip/TopologyTooltip.js:2"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/ui/Popover.js:3"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " src/topology/ui/Popup.js:5"
        },
        {
            "message": "unknown tag: link",
            "line": " src/topology/util/Animation.js:2"
        },
        {
            "message": "unknown tag: link",
            "line": " src/topology/util/Animation.js:2"
        },
        {
            "message": "unknown tag: link",
            "line": " src/topology/util/Animation.js:2"
        },
        {
            "message": "unknown tag: doctype",
            "line": " src/topology/util/query.js:139"
        },
        {
            "message": "Missing item type\nProcess graph data",
            "line": " src/topology/data/processor/Force.js:9"
        },
        {
            "message": "Missing item type\nProcess graph data",
            "line": " src/topology/data/processor/NeXtForce.js:9"
        },
        {
            "message": "Missing item type\nLine class constructor function",
            "line": " src/topology/data/Line.js:10"
        },
        {
            "message": "Missing item type",
            "line": " src/topology/data/Line.js:45"
        },
        {
            "message": "Missing item type\nForce layout algorithm class constructor function",
            "line": " src/topology/data/NeXtForce.js:8"
        },
        {
            "message": "Missing item type\nGet vertex's Vector object",
            "line": " src/topology/data/Vertex.js:120"
        },
        {
            "message": "Missing item type\nRemove vertex",
            "line": " src/topology/data/VertexSet.js:189"
        },
        {
            "message": "Missing item type",
            "line": " src/topology/geometry/Line.js:37"
        },
        {
            "message": "Missing item type\nIterate all icons",
            "line": " src/topology/svg/Icons.js:65"
        },
        {
            "message": "Missing item type\nVertex",
            "line": " src/topology/topology/core/Graph.js:152"
        },
        {
            "message": "Missing item type\nEdge",
            "line": " src/topology/topology/core/Graph.js:177"
        },
        {
            "message": "Missing item type\nEdgeSet",
            "line": " src/topology/topology/core/Graph.js:203"
        },
        {
            "message": "Missing item type\nVertexSet",
            "line": " src/topology/topology/core/Graph.js:232"
        },
        {
            "message": "Missing item type\nEdgeSetCollection",
            "line": " src/topology/topology/core/Graph.js:254"
        },
        {
            "message": "Missing item type\nData",
            "line": " src/topology/topology/core/Graph.js:275"
        },
        {
            "message": "Missing item type\nGet the passing bound's relative inside bound,if not passing param will return the topology graphic's bound",
            "line": " src/topology/topology/core/StageMixin.js:151"
        },
        {
            "message": "Missing item type\nRegister a group item class",
            "line": " src/topology/topology/group/GroupsLayer.js:91"
        },
        {
            "message": "Missing item type\nAdd a group to group layer",
            "line": " src/topology/topology/group/GroupsLayer.js:111"
        },
        {
            "message": "Missing item type\nclear all group",
            "line": " src/topology/topology/group/GroupsLayer.js:196"
        },
        {
            "message": "Missing item type\nFactory function, draw group",
            "line": " src/topology/topology/layer/Layer.js:107"
        },
        {
            "message": "Missing item type\nFadeIn layer's fade statues",
            "line": " src/topology/topology/layer/Layer.js:141"
        },
        {
            "message": "Missing item type\nTo generate a layer",
            "line": " src/topology/topology/layer/LayerMixin.js:82"
        },
        {
            "message": "Missing item type\nFadeIn layer's fade statues",
            "line": " src/topology/topology/layer/LayerMixin.js:213"
        },
        {
            "message": "Missing item type\nActivate a layout",
            "line": " src/topology/topology/layout/LayoutMixin.js:91"
        },
        {
            "message": "Missing item type\nget linkSet by node",
            "line": " src/topology/topology/link/LinkMixin.js:113"
        },
        {
            "message": "Missing item type\nGet linkSet by linkKey",
            "line": " src/topology/topology/link/LinkMixin.js:122"
        },
        {
            "message": "Missing item type\nGet links by node",
            "line": " src/topology/topology/link/LinkMixin.js:130"
        },
        {
            "message": "Missing item type\nCould use topo.getLayer('linkSet') get this\n* @class nx.graphic.Topology.LinksLayer\n* @extend nx.graphic.Topology.Layer",
            "line": " src/topology/topology/link/LinkSetLayer.js:5"
        },
        {
            "message": "Missing item type\nRemove a link",
            "line": " src/topology/topology/link/LinksLayer.js:67"
        },
        {
            "message": "Missing item type\nGet link by id",
            "line": " src/topology/topology/link/LinksLayer.js:178"
        },
        {
            "message": "Missing item type\nFactory function , will be call when set model",
            "line": " src/topology/topology/node/AbstractNode.js:228"
        },
        {
            "message": "Missing item type\nGet node bound",
            "line": " src/topology/topology/node/Node.js:275"
        },
        {
            "message": "Missing item type\nGet all visible nodes",
            "line": " src/topology/topology/node/NodeMixin.js:407"
        },
        {
            "message": "Missing item type\nRegister a customize icon",
            "line": " src/topology/topology/node/NodeMixin.js:420"
        },
        {
            "message": "Missing item type\nBatch action, highlight node and related nodes and connected links.",
            "line": " src/topology/topology/node/NodeMixin.js:449"
        },
        {
            "message": "Missing item type\nBatch action, highlight node and related nodes and connected links.",
            "line": " src/topology/topology/node/NodeMixin.js:497"
        },
        {
            "message": "Missing item type\nGet the bound of passing node's",
            "line": " src/topology/topology/node/NodeMixin.js:643"
        },
        {
            "message": "Missing item type\nGet all sub nodes",
            "line": " src/topology/topology/node/NodeSet.js:13"
        },
        {
            "message": "Missing item type\nAll tooltip's instance array",
            "line": " src/topology/topology/tooltip/TooltipManager.js:20"
        },
        {
            "message": "Missing item type\nRegister tooltip class",
            "line": " src/topology/topology/tooltip/TooltipManager.js:231"
        },
        {
            "message": "Missing item type\nGet tooltip instance by name",
            "line": " src/topology/topology/tooltip/TooltipManager.js:252"
        },
        {
            "message": "Missing item type\nPopover's title",
            "line": " src/topology/ui/Popover.js:10"
        },
        {
            "message": "Missing item type",
            "line": " src/topology/util/Animation.js:2"
        },
        {
            "message": "Missing item type",
            "line": " src/topology/util/query.js:139"
        }
    ]
}